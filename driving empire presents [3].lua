local l1iiI1ll1lIII11IIIi = assert local lIll1iI1llili1lI1llli = select local i1Iii1lIiII111lllii = tonumber local lIll1Iil11IilI1l1l1II = unpack local lIill1il11IIiIIl1li = pcall local l1IIIIiIiIllllliII1 = setfenv local ilIIilIlli1i1lli11I = setmetatable local iIllllIlIIiIlIIil1l = type local iIIIlll11III1l1Ii1l = getfenv local l1iIIii1ilIiliiIlIl = tostring local iI1Ii11IIlllii111ll = error local lIlIlililil1liIIIIl1I = string.sub local ll1lllI1iIi1iIlllii = string.byte local IIiIllliI11IIl11I1i = string.char local I1ll111iiiiI1Iiii1l = string.rep local lIlIiliill1l11i1l1lll = string.gsub local IlllIiIl1IlilIil111 = string.match local lIliIII11lI1iilIlilIl = table.insert local lIlIiIi1IlIiIlIlIIl11 = ll1lllI1iIi1iIlllii("u", 1) local lIl1lil1iIl11IIlI11II, l1I1lII1iIlII1lliII = #{4264}, #{ 2246, 642, 2139, 5000, 4522, 4803, 2945, 1362, 2966, 5018, 358, 6675, 2186, 5110, 3268, 3630, 5139, 3301, 3705, 495, 4196 } + lIlIiIi1IlIiIlIlIIl11 + 130933 local IlIIIlillllI1II11lI = {} local IIlIii1li1i1lIIil1I = 1 local lIll1Ii1llll111iiiiII, IllilIlllill11i11ll local function lIl1111ii11I1i1IlilIi(lIli1I1llIIiiI1I11I1i, lIlII1IIIIl1IiiIliiii) local Ii1lliI11l1lilllIii lIli1I1llIIiiI1I11I1i = lIlIiliill1l11i1l1lll(lIlIlililil1liIIIIl1I(lIli1I1llIIiiI1I11I1i, 5), "..", function(IIiII1i1I1iI11IIilI) if ll1lllI1iIi1iIlllii(IIiII1i1I1iI11IIilI, 2) == 72 then Ii1lliI11l1lilllIii = i1Iii1lIiII111lllii(lIlIlililil1liIIIIl1I(IIiII1i1I1iI11IIilI, 1, 1)) return "" else local IliIiI1I1i11llI1li1 = IIiIllliI11IIl11I1i(i1Iii1lIiII111lllii(IIiII1i1I1iI11IIilI, 16)) if Ii1lliI11l1lilllIii then local lIlIlI111IillI1li1Ii1 = I1ll111iiiiI1Iiii1l(IliIiI1I1i11llI1li1, Ii1lliI11l1lilllIii) Ii1lliI11l1lilllIii = nil return lIlIlI111IillI1li1Ii1 else return IliIiI1I1i11llI1li1 end end end) local function ilIiIi11iI1Ii1il11i() local Illi1IlI1llIiIi1lii = ll1lllI1iIi1iIlllii(lIli1I1llIIiiI1I11I1i, IIlIii1li1i1lIIil1I, IIlIii1li1i1lIIil1I) IIlIii1li1i1lIIil1I = IIlIii1li1i1lIIil1I + 1 return Illi1IlI1llIiIi1lii end local function I1iIIilI1l1IilI1li1() local Illi1IlI1llIiIi1lii, IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1, llllli1iillI1llii1i = ll1lllI1iIi1iIlllii(lIli1I1llIIiiI1I11I1i, IIlIii1li1i1lIIil1I, IIlIii1li1i1lIIil1I + 3) IIlIii1li1i1lIIil1I = IIlIii1li1i1lIIil1I + 4 return llllli1iillI1llii1i * 16777216 + lIlIlI111IillI1li1Ii1 * 65536 + IliIiI1I1i11llI1li1 * 256 + Illi1IlI1llIiIi1lii end local function l1ii1ilIi1lI1iiIl1I(I11l1iIlilIIiIi1ll1, I1I1I1IIIiIlII1liI1, lIll11ill1IIlli1l1i1I) if lIll11ill1IIlli1l1i1I then local I1lI1II1IIiIllII1li, lIl1111iI1liillI111I1 = 0, 0 for ilili111i1l1Il11I1l = I1I1I1IIIiIlII1liI1, lIll11ill1IIlli1l1i1I do I1lI1II1IIiIllII1li = I1lI1II1IIiIllII1li + 2 ^ lIl1111iI1liillI111I1 * l1ii1ilIi1lI1iiIl1I(I11l1iIlilIIiIi1ll1, ilili111i1l1Il11I1l) lIl1111iI1liillI111I1 = lIl1111iI1liillI111I1 + 1 end return I1lI1II1IIiIllII1li else local I1I1Iil1lllI1Ii1iI1 = 2 ^ (I1I1I1IIIiIlII1liI1 - 1) return I1I1Iil1lllI1Ii1iI1 <= I11l1iIlilIIiIi1ll1 % (I1I1Iil1lllI1Ii1iI1 + I1I1Iil1lllI1Ii1iI1) and 1 or 0 end end local function ililii1Ilili1II11lI() local Illi1IlI1llIiIi1lii, IliIiI1I1i11llI1li1 = I1iIIilI1l1IilI1li1(), I1iIIilI1l1IilI1li1() if Illi1IlI1llIiIi1lii == 0 and IliIiI1I1i11llI1li1 == 0 then return 0 end return (-2 * l1ii1ilIi1lI1iiIl1I(IliIiI1I1i11llI1li1, 32) + 1) * 2 ^ (l1ii1ilIi1lI1iiIl1I(IliIiI1I1i11llI1li1, 21, 31) - 1023) * ((l1ii1ilIi1lI1iiIl1I(IliIiI1I1i11llI1li1, 1, 20) * 4294967296 + Illi1IlI1llIiIi1lii) / 4503599627370496 + 1) end local iiliiiIiiIiliiiIil1 = bit or bit32 local III1I11li1iil1i11i1 = iiliiiIiiIiliiiIil1 and iiliiiIiiIiliiiIil1.bxor or function(Illi1IlI1llIiIi1lii, IliIiI1I1i11llI1li1) local iiI1IiililIi1Ili1ii = 1 local lIlIlI111IillI1li1Ii1 = 0 while Illi1IlI1llIiIi1lii > 0 and IliIiI1I1i11llI1li1 > 0 do local I1liii1I11IIIlIIIIl = Illi1IlI1llIiIi1lii % 2 local iiI1IilIlllIi1IIllI = IliIiI1I1i11llI1li1 % 2 if I1liii1I11IIIlIIIIl ~= iiI1IilIlllIi1IIllI then lIlIlI111IillI1li1Ii1 = lIlIlI111IillI1li1Ii1 + iiI1IiililIi1Ili1ii end Illi1IlI1llIiIi1lii = (Illi1IlI1llIiIi1lii - I1liii1I11IIIlIIIIl) / 2 IliIiI1I1i11llI1li1 = (IliIiI1I1i11llI1li1 - iiI1IilIlllIi1IIllI) / 2 iiI1IiililIi1Ili1ii = iiI1IiililIi1Ili1ii * 2 end if Illi1IlI1llIiIi1lii < IliIiI1I1i11llI1li1 then Illi1IlI1llIiIi1lii = IliIiI1I1i11llI1li1 end while Illi1IlI1llIiIi1lii > 0 do local I1liii1I11IIIlIIIIl = Illi1IlI1llIiIi1lii % 2 if I1liii1I11IIIlIIIIl > 0 then lIlIlI111IillI1li1Ii1 = lIlIlI111IillI1li1Ii1 + iiI1IiililIi1Ili1ii end Illi1IlI1llIiIi1lii = (Illi1IlI1llIiIi1lii - I1liii1I11IIIlIIIIl) / 2 iiI1IiililIi1Ili1ii = iiI1IiililIi1Ili1ii * 2 end return lIlIlI111IillI1li1Ii1 end local function Il11I1ii11lIillllii(liiI1lii11li1IiIIiI) local illIllIll1lI1Il1i11 = { ll1lllI1iIi1iIlllii(lIli1I1llIIiiI1I11I1i, IIlIii1li1i1lIIil1I, IIlIii1li1i1lIIil1I + 3) } IIlIii1li1i1lIIil1I = IIlIii1li1i1lIIil1I + 4 local Illi1IlI1llIiIi1lii = III1I11li1iil1i11i1(illIllIll1lI1Il1i11[1], IllilIlllill11i11ll) local IliIiI1I1i11llI1li1 = III1I11li1iil1i11i1(illIllIll1lI1Il1i11[2], IllilIlllill11i11ll) local lIlIlI111IillI1li1Ii1 = III1I11li1iil1i11i1(illIllIll1lI1Il1i11[3], IllilIlllill11i11ll) local llllli1iillI1llii1i = III1I11li1iil1i11i1(illIllIll1lI1Il1i11[4], IllilIlllill11i11ll) IllilIlllill11i11ll = (57 * IllilIlllill11i11ll + liiI1lii11li1IiIIiI) % 256 return llllli1iillI1llii1i * 16777216 + lIlIlI111IillI1li1Ii1 * 65536 + IliIiI1I1i11llI1li1 * 256 + Illi1IlI1llIiIi1lii end local function iiI1ilIlII1li1i1Ili(I1IllllIIll1i111i1I) local lllliiI111i1111l111 = I1iIIilI1l1IilI1li1() local lIlll1lliIIIlIi1ll1ll = "" for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lllliiI111i1111l111 do lIlll1lliIIIlIi1ll1ll = lIlll1lliIIIlIi1ll1ll .. IIiIllliI11IIl11I1i(III1I11li1iil1i11i1(ll1lllI1iIi1iIlllii(lIli1I1llIIiiI1I11I1i, IIlIii1li1i1lIIil1I + ilili111i1l1Il11I1l - 1), lIll1Ii1llll111iiiiII)) lIll1Ii1llll111iiiiII = (I1IllllIIll1i111i1I * lIll1Ii1llll111iiiiII + 9) % 256 end IIlIii1li1i1lIIil1I = IIlIii1li1i1lIIil1I + lllliiI111i1111l111 return lIlll1lliIIIlIi1ll1ll end lIll1Ii1llll111iiiiII = ilIiIi11iI1Ii1il11i() IllilIlllill11i11ll = ilIiIi11iI1Ii1il11i() local i1lii1iI1lil1i1i1il = {} for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, ilIiIi11iI1Ii1il11i() do local llIIll11111Ii1iIIl1 = ilIiIi11iI1Ii1il11i() local li11l1li1I1il1i1IIl = (ilili111i1l1Il11I1l - 1) * 2 i1lii1iI1lil1i1i1il[li11l1li1I1il1i1IIl] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, 1, 4) i1lii1iI1lil1i1i1il[li11l1li1I1il1i1IIl + 1] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, 5, 8) end local function lIlI1iiIli1Il1i1111il() local lIliiIll1l1iiill1lII1 = { nil, nil, nil, {}, {}, {}, {} } lIliiIll1l1iiill1lII1[3] = ilIiIi11iI1Ii1il11i() lIliiIll1l1iiill1lII1[2] = ilIiIi11iI1Ii1il11i() local lIli1I1li1lIiiIlIiIll = I1iIIilI1l1IilI1li1() for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lIli1I1li1lIiiIlIiIll do lIliiIll1l1iiill1lII1[4][ilili111i1l1Il11I1l] = I1iIIilI1l1IilI1li1() end ilIiIi11iI1Ii1il11i() local lIli1I1li1lIiiIlIiIll = I1iIIilI1l1IilI1li1() - (#{ 4367, 661, 3178, 6847, 5837, 659, 5112, 3111, 5182, 3130, 5238, 4998, 5286, 455, 5183, 1924, 5883, 6099, 3203, 1592, 4495, 6961, 2149, 3438 } + lIlIiIi1IlIiIlIlIIl11 + 133587) local Il111ilI1IiIliiiil1 = ilIiIi11iI1Ii1il11i() for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lIli1I1li1lIiiIlIiIll do local iIl1iilil1IIlI1ll11 local iIllllIlIIiIlIIil1l = ilIiIi11iI1Ii1il11i() if iIllllIlIIiIlIIil1l == #{ 3218, 6109, 1138, 2759, 3806, 3736, 2819, 613, 3121, 6263, 6629, 6905, 1069, 2745, 4938, 2616, 6859, 4639, 1080, 1627, 1739, 6357 } + lIlIiIi1IlIiIlIlIIl11 + 106 then iIl1iilil1IIlI1ll11 = #{ 6856, 3867, 1875, 5763, 6633, 3557, 1242, 996, 3629, 1872, 6545, 2002, 4325, 2622, 6246, 114, 2019, 1886, 982, 4644, 6689, 5937, 5154 } + lIlIiIi1IlIiIlIlIIl11 + 63399 == #{ 2383, 5705, 4589, 6677, 6873, 2463, 5393, 2005, 5895, 791, 6093, 1031, 2269, 6456, 743, 5550, 4043, 1721, 4580, 5492, 1077 } + lIlIiIi1IlIiIlIlIIl11 + 126646 end if iIllllIlIIiIlIIil1l == #{ 5357, 5727, 1627, 179, 2266, 1506, 6721, 67, 384, 5996, 5181, 5770, 4038, 936, 781, 892, 2501, 3979, 5883, 3188, 1716, 6849, 4654 } + lIlIiIi1IlIiIlIlIIl11 + -84 then iIl1iilil1IIlI1ll11 = lIlIlililil1liIIIIl1I(iiI1ilIlII1li1i1Ili(Il111ilI1IiIliiiil1), #{3019, 2122}) end if iIllllIlIIiIlIIil1l == #{ 5770, 6769, 5381, 2896, 5894, 5109, 4092, 2399, 4152, 5214, 1089, 2749, 5008, 661, 2616, 5496, 3290, 5295, 2481, 3984 } + lIlIiIi1IlIiIlIlIIl11 + 78 then iIl1iilil1IIlI1ll11 = ililii1Ilili1II11lI() end if iIllllIlIIiIlIIil1l == #{ 5336, 2351, 4169, 65, 3604, 423, 5048, 1261, 4620, 2171, 2642, 1143, 551, 1613, 1043, 2439, 5029, 1629, 6586, 5945, 1834, 6215, 4555, 4837 } + lIlIiIi1IlIiIlIlIIl11 + -27 then iIl1iilil1IIlI1ll11 = ililii1Ilili1II11lI() end if iIllllIlIIiIlIIil1l == #{ 2299, 6772, 2719, 1810, 892, 5400, 1598, 5486, 954, 6581, 5872, 2753, 1297, 3119, 2069, 451, 6694, 1443 } then iIl1iilil1IIlI1ll11 = #{ 4921, 6053, 5818, 5533, 5352, 2304, 6436, 5635, 2702, 2787, 6850, 6866, 1513, 2384, 633, 1486, 526, 636, 3193, 867 } + lIlIiIi1IlIiIlIlIIl11 + 99724 == #{ 4921, 6053, 5818, 5533, 5352, 2304, 6436, 5635, 2702, 2787, 6850, 6866, 1513, 2384, 633, 1486, 526, 636, 3193, 867 } + lIlIiIi1IlIiIlIlIIl11 + 99724 end if iIllllIlIIiIlIIil1l == #{ 4857, 858, 2616, 2322, 260, 5983, 2314, 4462, 2749, 3831, 1360, 2731, 6542, 4053, 630, 6883, 3992, 2172, 2737, 1277, 3433 } + lIlIiIi1IlIiIlIlIIl11 + 44 then iIl1iilil1IIlI1ll11 = ilIiIi11iI1Ii1il11i() end if iIllllIlIIiIlIIil1l == #{ 890, 4871, 6620, 5748, 3168, 706, 425, 4600, 4332, 981, 6557, 517, 1212, 2371, 5377, 651, 3945, 1615, 5768, 1975, 6322 } + lIlIiIi1IlIiIlIlIIl11 + 8 then iIl1iilil1IIlI1ll11 = ilIiIi11iI1Ii1il11i() + I1iIIilI1l1IilI1li1() + ililii1Ilili1II11lI() end if iIllllIlIIiIlIIil1l == #{ 4523, 906, 1245, 2118, 3177, 2057, 5158, 4048, 1467, 6317 } then iIl1iilil1IIlI1ll11 = ilIiIi11iI1Ii1il11i() + I1iIIilI1l1IilI1li1() + ililii1Ilili1II11lI() end if iIllllIlIIiIlIIil1l == #{ 2547, 5449, 3278, 6484, 4798, 4037, 4335, 43, 714, 6563, 360, 2312, 3884, 707, 6663, 2345, 5812, 2666, 5755, 5734, 1950, 5205, 6793 } + lIlIiIi1IlIiIlIlIIl11 + -6 then iIl1iilil1IIlI1ll11 = ilIiIi11iI1Ii1il11i() end lIliiIll1l1iiill1lII1[5][ilili111i1l1Il11I1l - lIl1lil1iIl11IIlI11II] = iIl1iilil1IIlI1ll11 end local lIli1I1li1lIiiIlIiIll = I1iIIilI1l1IilI1li1() for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lIli1I1li1lIiiIlIiIll do lIliiIll1l1iiill1lII1[6][ilili111i1l1Il11I1l - lIl1lil1iIl11IIlI11II] = lIlI1iiIli1Il1i1111il() end local lIlllii11illIlIllllIl = I1iIIilI1l1IilI1li1() - (#{ 3023, 6246, 5874, 1403, 3857, 4462, 4577, 675, 4109, 4002, 142, 1662, 6303, 2339, 2358, 4184, 1930, 2887, 3048, 1800, 5831, 466 } + lIlIiIi1IlIiIlIlIIl11 + 133561) local lIlIii1l111l11lillIIi = ilIiIi11iI1Ii1il11i() for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lIlllii11illIlIllllIl do local li1111IlI1lIiiiIiiI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local llIIll11111Ii1iIIl1 = Il11I1ii11lIillllii(lIlIii1l111l11lillIIi) li1111IlI1lIiiiIiiI[92362] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{ 4303, 5118, 1498, 1454, 2293, 2508, 5641, 2410, 1537, 5084 }, #{ 2371, 608, 6010, 1882, 159, 373, 716, 2071, 93, 6103, 4000, 5899, 1349, 3199, 5300, 5077, 3293, 3485 }) li1111IlI1lIiiiIiiI[97318] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{3425}, #{ 5914, 2025, 6381, 3116, 5028, 244, 2134, 4900, 3983, 4802, 3081, 487, 3244, 1412, 3876, 317, 3598, 1445 }) li1111IlI1lIiiiIiiI[5] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{2847}, #{ 3056, 365, 3363, 2978, 6831, 3736, 6325, 345, 4113 }) li1111IlI1lIiiiIiiI[2] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{4998}, #{ 3307, 4537, 2878, 5174, 5918, 5905, 936, 5666, 3478, 530, 4175, 4700, 4899, 6414, 73, 807, 5933, 758 }) li1111IlI1lIiiiIiiI[1] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{ 1088, 3115, 3228, 5790, 4906, 4164, 30, 3067, 2178, 5678, 3699, 2115, 887, 6961, 1509, 1980, 6524, 4850, 835 }, #{ 2669, 1092, 1144, 1830, 237, 4346, 6331, 2440, 1206, 4014, 2042, 5589, 1771, 2081, 3143, 4027, 3698, 1209, 4790, 3566 } + lIlIiIi1IlIiIlIlIIl11 + -111) li1111IlI1lIiiiIiiI[10] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{ 5178, 5701, 5947, 2583, 2158, 77, 3343, 973, 825, 5392 }, #{ 2766, 5719, 1599, 4671, 2062, 5104, 2414, 1900, 1939, 633, 2161, 3864, 44, 4753, 2457, 2391, 2337, 5431 }) li1111IlI1lIiiiIiiI[8] = l1ii1ilIi1lI1iiIl1I(llIIll11111Ii1iIIl1, #{ 2699, 1645, 3594, 6820, 1772, 5588, 3584, 2954, 1517, 4052, 1835, 1048, 2234, 5167, 3203, 4317, 840, 5450, 471, 6211, 6357, 2976 } + lIlIiIi1IlIiIlIlIIl11 + -112, #{ 457, 6519, 3380, 3814, 6511, 4856, 4445, 1774, 3014, 4959, 142, 2720, 330, 1177, 818, 5336, 1792, 2651, 2274, 1472, 2125, 895, 1693 } + lIlIiIi1IlIiIlIlIIl11 + -108) lIliiIll1l1iiill1lII1[7][ilili111i1l1Il11I1l] = li1111IlI1lIiiiIiiI end for ilili111i1l1Il11I1l = lIl1lil1iIl11IIlI11II, lIlllii11illIlIllllIl do local li1111IlI1lIiiiIiiI = lIliiIll1l1iiill1lII1[7][ilili111i1l1Il11I1l] local lIl1ll11iIliiI1ll1lll = i1lii1iI1lil1i1i1il[li1111IlI1lIiiiIiiI[8]] if lIl1ll11iIliiI1ll1lll == #{ 1839, 538, 3902 } then if li1111IlI1lIiiiIiiI[5] > 255 then li1111IlI1lIiiiIiiI[9] = true li1111IlI1lIiiiIiiI[4] = lIliiIll1l1iiill1lII1[5][li1111IlI1lIiiiIiiI[5] - 256] end if li1111IlI1lIiiiIiiI[10] > 255 then li1111IlI1lIiiiIiiI[7] = true li1111IlI1lIiiiIiiI[6] = lIliiIll1l1iiill1lII1[5][li1111IlI1lIiiiIiiI[10] - 256] end end if lIl1ll11iIliiI1ll1lll == #{4591} and li1111IlI1lIiiiIiiI[5] > 255 then li1111IlI1lIiiiIiiI[9] = true li1111IlI1lIiiiIiiI[4] = lIliiIll1l1iiill1lII1[5][li1111IlI1lIiiiIiiI[5] - 256] end if lIl1ll11iIliiI1ll1lll == #{ 909, 2862, 479, 6591 } then li1111IlI1lIiiiIiiI[3] = lIliiIll1l1iiill1lII1[5][li1111IlI1lIiiiIiiI[2]] end if lIl1ll11iIliiI1ll1lll == #{2532, 6262} and li1111IlI1lIiiiIiiI[10] > 255 then li1111IlI1lIiiiIiiI[7] = true li1111IlI1lIiiiIiiI[6] = lIliiIll1l1iiill1lII1[5][li1111IlI1lIiiiIiiI[10] - 256] end end lIliiIll1l1iiill1lII1[1] = ilIiIi11iI1Ii1il11i() I1iIIilI1l1IilI1li1() return lIliiIll1l1iiill1lII1 end local function IliIiiiIli111IiIiii(lIliiIll1l1iiill1lII1, lIlII1IIIIl1IiiIliiii, iI1IIilIiIiIiI111i1) local IIlIlIliiiI11I1IIiI, Il11iIlil11iIIiIlIl = 12, 6 local liIliillllii11l1Ili = lIliiIll1l1iiill1lII1[7] local lIlIlliiI111i1i1iIIIl = 2 local lIlI1IIIiiiIi111i1lII = lIliiIll1l1iiill1lII1[6] local IllllIli1lI1ll1liI1 = lIliiIll1l1iiill1lII1[1] local ilIlIIiIi1lililliIl = lIliiIll1l1iiill1lII1[3] local I11i11ilI11liiil1l1 = 8 local iiI1ll111IIii11lIl1 = lIliiIll1l1iiill1lII1[4] local I1II1iI11I1iIi1i11i = 5 local function lliIllIIl111l1IIIi1(...) local lIlilIIiil111llIIiiIi = 0 local ii1IIi1ii1IiliIl1li = { lIll1Iil11IilI1l1l1II({}, 1, ilIlIIiIi1lililliIl) } local liill1lIiIl1I1l1ll1 = 1 local ll1l11l11lil1III111 = {} local IIlIiI1Iiii1lilllII = {} local lIlII1IIIIl1IiiIliiii = iIIIlll11III1l1Ii1l() local I1Ill1llIiillIlllli = { ... } local ll1iiIlIlili1IIl1Ii = #I1Ill1llIiillIlllli - 1 for ilili111i1l1Il11I1l = 0, ll1iiIlIlili1IIl1Ii do if ilili111i1l1Il11I1l < IllllIli1lI1ll1liI1 then ii1IIi1ii1IiliIl1li[ilili111i1l1Il11I1l] = I1Ill1llIiillIlllli[ilili111i1l1Il11I1l + 1] end end local function lIli1illIi1l1llIli1I1(...) local lIlIlI111IillI1li1Ii1 = lIll1iI1llili1lI1llli("#", ...) local lIIl11iliiiIiIIIIl1 = { ... } return lIlIlI111IillI1li1Ii1, lIIl11iliiiIiIIIIl1 end local function i1Ili11l1I1l111l1Il() while true do local lIl11l1I1ll11Ilil1Ill = liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] local l1ii1II1IIIlIIIl1ii = lIl11l1I1ll11Ilil1Ill[8] liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 if l1ii1II1IIIlIIIl1ii >= 11 then if l1ii1II1IIIlIIIl1ii >= 17 then if l1ii1II1IIIlIIIl1ii >= 20 then if l1ii1II1IIIlIIIl1ii < 21 then if not not ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] == (lIl11l1I1ll11Ilil1Ill[10] == 0) then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end elseif l1ii1II1IIIlIIIl1ii == 22 then local IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[9] then IliIiI1I1i11llI1li1 = lIl11l1I1ll11Ilil1Ill[4] else IliIiI1I1i11llI1li1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = IliIiI1I1i11llI1li1 - lIlIlI111IillI1li1Ii1 else local lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]][lIlIlI111IillI1li1Ii1] end elseif l1ii1II1IIIlIIIl1ii < 18 then ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lIl11l1I1ll11Ilil1Ill[3] elseif l1ii1II1IIIlIIIl1ii == 19 then local il11iil11I1iIiiilii = lIlI1IIIiiiIi111i1lII[lIl11l1I1ll11Ilil1Ill[2]] local Iii1lilil1i1lIlI1i1 = {} if il11iil11I1iIiiilii[lIlIlliiI111i1i1iIIIl] > 0 then do local lIlliiIIIilll1l1I1lli = {} Iii1lilil1i1lIlI1i1 = ilIIilIlli1i1lli11I({}, { __index = function(lIIl11iliiiIiIIIIl1, IiIi1II1lIIlIii11i1) local II1I1liI1IiiIililIi = lIlliiIIIilll1l1I1lli[IiIi1II1lIIlIii11i1] return II1I1liI1IiiIililIi[1][II1I1liI1IiiIililIi[2]] end, __newindex = function(lIIl11iliiiIiIIIIl1, IiIi1II1lIIlIii11i1, Illi11Iii1il11ii1i1) local II1I1liI1IiiIililIi = lIlliiIIIilll1l1I1lli[IiIi1II1lIIlIii11i1] II1I1liI1IiiIililIi[1][II1I1liI1IiiIililIi[2]] = Illi11Iii1il11ii1i1 end }) for ilili111i1l1Il11I1l = 1, il11iil11I1iIiiilii[lIlIlliiI111i1i1iIIIl] do local ll1i11ilii11lII11II = liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] if ll1i11ilii11lII11II[I11i11ilI11liiil1l1] == IIlIlIliiiI11I1IIiI then lIlliiIIIilll1l1I1lli[ilili111i1l1Il11I1l - 1] = { ii1IIi1ii1IiliIl1li, ll1i11ilii11lII11II[I1II1iI11I1iIi1i11i] } elseif ll1i11ilii11lII11II[I11i11ilI11liiil1l1] == Il11iIlil11iIIiIlIl then lIlliiIIIilll1l1I1lli[ilili111i1l1Il11I1l - 1] = { iI1IIilIiIiIiI111i1, ll1i11ilii11lII11II[I1II1iI11I1iIi1i11i] } end liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end if not ll1l11l11lil1III111[ii1IIi1ii1IiliIl1li] then ll1l11l11lil1III111[ii1IIi1ii1IiliIl1li] = {lIlliiIIIilll1l1I1lli} else lIliIII11lI1iilIlilIl(ll1l11l11lil1III111[ii1IIi1ii1IiliIl1li], lIlliiIIIilll1l1I1lli) end end end local lIll1IIli11l1IIiIliiI = IliIiiiIli111IiIiii(il11iil11I1iIiiilii, lIlII1IIIIl1IiiIliiii, Iii1lilil1i1lIlI1i1) ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lIll1IIli11l1IIiIliiI else local lii11iii1IIl11i1i1l = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] for ilili111i1l1Il11I1l = lIl11l1I1ll11Ilil1Ill[5] + 1, lIl11l1I1ll11Ilil1Ill[10] do lii11iii1IIl11i1i1l = lii11iii1IIl11i1i1l .. ii1IIi1ii1IiliIl1li[ilili111i1l1Il11I1l] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lii11iii1IIl11i1i1l end elseif l1ii1II1IIIlIIIl1ii >= 14 then if l1ii1II1IIIlIIIl1ii >= 15 then if l1ii1II1IIIlIIIl1ii ~= 16 then if lIl11l1I1ll11Ilil1Ill[10] == 204 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 5, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 32) % 256, [5] = (lIl11l1I1ll11Ilil1Ill[5] - 32) % 256 } else ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = -ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end elseif lIl11l1I1ll11Ilil1Ill[5] == 234 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 11, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 196) % 256, [5] = (lIl11l1I1ll11Ilil1Ill[10] - 196) % 256 } else local lIli1Iil1l11ll111ii1i = lIl11l1I1ll11Ilil1Ill[1] local li11l1li1I1il1i1IIl = lIli1Iil1l11ll111ii1i + 2 local lii11iii1IIl11i1i1l = { ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i](ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i + 1], ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i + 2]) } for ilili111i1l1Il11I1l = 1, lIl11l1I1ll11Ilil1Ill[10] do ii1IIi1ii1IiliIl1li[li11l1li1I1il1i1IIl + ilili111i1l1Il11I1l] = lii11iii1IIl11i1i1l[ilili111i1l1Il11I1l] end if ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i + 3] ~= nil then ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i + 2] = ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i + 3] else liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end end else liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + (lIl11l1I1ll11Ilil1Ill[2] - l1I1lII1iIlII1lliII) end elseif l1ii1II1IIIlIIIl1ii < 12 then if lIl11l1I1ll11Ilil1Ill[10] == 227 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 12, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 124) % 256, [5] = (lIl11l1I1ll11Ilil1Ill[5] - 124) % 256 } elseif lIl11l1I1ll11Ilil1Ill[10] == 2 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 6, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 215) % 256, [5] = (lIl11l1I1ll11Ilil1Ill[5] - 215) % 256 } else iI1IIilIiIiIiI111i1[lIl11l1I1ll11Ilil1Ill[5]] = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] end elseif l1ii1II1IIIlIIIl1ii == 13 then ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = { lIll1Iil11IilI1l1l1II(IlIIIlillllI1II11lI, 1, lIl11l1I1ll11Ilil1Ill[5] == 0 and 255 or lIl11l1I1ll11Ilil1Ill[5]) } else ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end elseif l1ii1II1IIIlIIIl1ii >= 5 then if l1ii1II1IIIlIIIl1ii < 8 then if l1ii1II1IIIlIIIl1ii < 6 then if lIl11l1I1ll11Ilil1Ill[10] == 211 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 20, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 38) % 256, [10] = (lIl11l1I1ll11Ilil1Ill[5] - 38) % 256 } else ll1l11l11lil1III111[ii1IIi1ii1IiliIl1li] = nil local lIli1Iil1l11ll111ii1i = lIl11l1I1ll11Ilil1Ill[1] local lIlII1IIliI1iilI1l1il = lIl11l1I1ll11Ilil1Ill[5] if lIlII1IIliI1iilI1l1il == 1 then return true end local iIi11ll1IIiIlilliIl = lIli1Iil1l11ll111ii1i + lIlII1IIliI1iilI1l1il - 2 if lIlII1IIliI1iilI1l1il == 0 then iIi11ll1IIiIlilliIl = lIlilIIiil111llIIiiIi end return true, lIli1Iil1l11ll111ii1i, iIi11ll1IIiIlilliIl end elseif l1ii1II1IIIlIIIl1ii ~= 7 then if lIl11l1I1ll11Ilil1Ill[10] == 83 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 - 1 liIliillllii11l1Ili[liill1lIiIl1I1l1ll1] = { [8] = 16, [1] = (lIl11l1I1ll11Ilil1Ill[1] - 240) % 256, [10] = (lIl11l1I1ll11Ilil1Ill[5] - 240) % 256 } else ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = iI1IIilIiIiIiI111i1[lIl11l1I1ll11Ilil1Ill[5]] end else local IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[9] then IliIiI1I1i11llI1li1 = lIl11l1I1ll11Ilil1Ill[4] else IliIiI1I1i11llI1li1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]][IliIiI1I1i11llI1li1] = lIlIlI111IillI1li1Ii1 end elseif l1ii1II1IIIlIIIl1ii < 9 then local IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[9] then IliIiI1I1i11llI1li1 = lIl11l1I1ll11Ilil1Ill[4] else IliIiI1I1i11llI1li1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end if IliIiI1I1i11llI1li1 < lIlIlI111IillI1li1Ii1 ~= (lIl11l1I1ll11Ilil1Ill[1] ~= 0) then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end elseif l1ii1II1IIIlIIIl1ii == 10 then local IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[9] then IliIiI1I1i11llI1li1 = lIl11l1I1ll11Ilil1Ill[4] else IliIiI1I1i11llI1li1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = IliIiI1I1i11llI1li1 + lIlIlI111IillI1li1Ii1 else lIlII1IIIIl1IiiIliiii[lIl11l1I1ll11Ilil1Ill[3]] = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] end elseif l1ii1II1IIIlIIIl1ii < 2 then if l1ii1II1IIIlIIIl1ii ~= 1 then ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lIl11l1I1ll11Ilil1Ill[5] ~= 0 if lIl11l1I1ll11Ilil1Ill[10] ~= 0 then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end else local IliIiI1I1i11llI1li1, lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[9] then IliIiI1I1i11llI1li1 = lIl11l1I1ll11Ilil1Ill[4] else IliIiI1I1i11llI1li1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] end if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end if IliIiI1I1i11llI1li1 == lIlIlI111IillI1li1Ii1 ~= (lIl11l1I1ll11Ilil1Ill[1] ~= 0) then liill1lIiIl1I1l1ll1 = liill1lIiIl1I1l1ll1 + 1 end end elseif l1ii1II1IIIlIIIl1ii >= 3 then if l1ii1II1IIIlIIIl1ii == 4 then local lIl1IIlI1IiilIiIlIi = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[5]] local lIlIlI111IillI1li1Ii1 if lIl11l1I1ll11Ilil1Ill[7] then lIlIlI111IillI1li1Ii1 = lIl11l1I1ll11Ilil1Ill[6] else lIlIlI111IillI1li1Ii1 = ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[10]] end ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1] + 1] = lIl1IIlI1IiilIiIlIi ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lIl1IIlI1IiilIiIlIi[lIlIlI111IillI1li1Ii1] else ii1IIi1ii1IiliIl1li[lIl11l1I1ll11Ilil1Ill[1]] = lIlII1IIIIl1IiiIliiii[lIl11l1I1ll11Ilil1Ill[3]] end else local lIli1Iil1l11ll111ii1i = lIl11l1I1ll11Ilil1Ill[1] local I1Ill1llIiillIlllli = lIl11l1I1ll11Ilil1Ill[5] local i1IIl111l1lllIiII1l = lIl11l1I1ll11Ilil1Ill[10] local lIIIilil1I1IIililIl, iIi11ll1IIiIlilliIl, i1Ili11l1I1l111l1Il if I1Ill1llIiillIlllli ~= 1 then if I1Ill1llIiillIlllli ~= 0 then iIi11ll1IIiIlilliIl = lIli1Iil1l11ll111ii1i + I1Ill1llIiillIlllli - 1 else iIi11ll1IIiIlilliIl = lIlilIIiil111llIIiiIi end iIi11ll1IIiIlilliIl, lIIIilil1I1IIililIl = lIli1illIi1l1llIli1I1(ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i](lIll1Iil11IilI1l1l1II(ii1IIi1ii1IiliIl1li, lIli1Iil1l11ll111ii1i + 1, iIi11ll1IIiIlilliIl))) else iIi11ll1IIiIlilliIl, lIIIilil1I1IIililIl = lIli1illIi1l1llIli1I1(ii1IIi1ii1IiliIl1li[lIli1Iil1l11ll111ii1i]()) end if i1IIl111l1lllIiII1l ~= 1 then if i1IIl111l1lllIiII1l ~= 0 then iIi11ll1IIiIlilliIl = lIli1Iil1l11ll111ii1i + i1IIl111l1lllIiII1l - 2 lIlilIIiil111llIIiiIi = iIi11ll1IIiIlilliIl + 1 else iIi11ll1IIiIlilliIl = iIi11ll1IIiIlilliIl + lIli1Iil1l11ll111ii1i - 1 lIlilIIiil111llIIiiIi = iIi11ll1IIiIlilliIl end i1Ili11l1I1l111l1Il = 0 for ilili111i1l1Il11I1l = lIli1Iil1l11ll111ii1i, iIi11ll1IIiIlilliIl do i1Ili11l1I1l111l1Il = i1Ili11l1I1l111l1Il + 1 ii1IIi1ii1IiliIl1li[ilili111i1l1Il11I1l] = lIIIilil1I1IIililIl[i1Ili11l1I1l111l1Il] end else lIlilIIiil111llIIiiIi = lIli1Iil1l11ll111ii1i - 1 end for ilili111i1l1Il11I1l = lIlilIIiil111llIIiiIi + 1, ilIlIIiIi1lililliIl do ii1IIi1ii1IiliIl1li[ilili111i1l1Il11I1l] = nil end end end end local liil1llIlIllIII1li1, lIlll1lliIIIlIi1ll1ll, IIili1I11lIlIliIlll, lIlIIlI1I111iiill11Il = lIill1il11IIiIIl1li(i1Ili11l1I1l111l1Il) if liil1llIlIllIII1li1 then if IIili1I11lIlIliIlll then return lIll1Iil11IilI1l1l1II(ii1IIi1ii1IiliIl1li, IIili1I11lIlIliIlll, lIlIIlI1I111iiill11Il) end else iI1Ii11IIlllii111ll("Luraph Script:" .. (iiI1ll111IIii11lIl1[liill1lIiIl1I1l1ll1 - 1] or "") .. ": " .. l1iIIii1ilIiliiIlIl(lIlll1lliIIIlIi1ll1ll), 0) end end l1IIIIiIiIllllliII1(lliIllIIl111l1IIIi1, lIlII1IIIIl1IiiIliiii) return lliIllIIl111l1IIIi1 end local lIlII1IIilli1iI1Iil1l = lIlI1iiIli1Il1i1111il() return IliIiiiIli111IiIiii(lIlII1IIilli1iI1Iil1l, lIlII1IIIIl1IiiIliiii)() end lIl1111ii11I1i1IlilIiiIIIlll11III1l1Ii1l()) 
