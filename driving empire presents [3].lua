local I1l1lli1l1iI1iIiliI = assert local I1iI1ll1llIIi1IIi1I = select local I1iiiIIIII1iill1l1I = tonumber local ill1IilI11IliIiIiii = unpack local iiIIII1il1lI1II1II1 = pcall local lIli1IllliI1Ii1lilIl1 = setfenv local i11IliIi1iiilliiil1 = setmetatable local lIii1lIl1iIli1l1ilI = type local iIlill1i1ilIll11il1 = getfenv local lIlI1ililiiIliIl1IiIl = tostring local I1iilIIiIllli11lIIi = error local Iiiil11l11lI11I1i1i = string.sub local lIlliIlIiiI1lII1Iil = string.byte local li1I1i1Iiilll11IIiI = string.char local liiilII111I1l1iIi1I = string.rep local lIliIIl1I1l111I1iIIl1 = string.gsub local lIlliillI1IIiil1lIIlI = string.match local lIllIl1li11IlIll11IlI = table.insert local ii1ll11i1l11ll1iIii = lIlliIlIiiI1lII1Iil("5", 1) local Il1IIiIl1I11lIIIIl1, IIlllIil11l1iIilIil = #{1206}, #{ 6727, 2024, 4893, 2153, 1550, 1029, 4533, 4537, 2383, 499, 6346, 6897, 2328, 6826, 5556, 3526, 428, 4074, 5029, 1086, 6584, 6 } + ii1ll11i1l11ll1iIii + 130996 local lIll1ilIi1IlIiIIIIIIl = {} local iII1ili111l111I1ilI = 1 local lIl1illIl1Il11iiIII1i, lll1IlilII1IIIIl1il local function l1I1iIi1i1llIIiii11(lIliiiliilllIl1Iiliil, lIliI1IiIl111liiI1i1l) local lIllll11Iil1iillI1I1l lIliiiliilllIl1Iiliil = lIliIIl1I1l111I1iIIl1(Iiiil11l11lI11I1i1i(lIliiiliilllIl1Iiliil, 5), "..", function(iIlI1I11li1III111II) if lIlliIlIiiI1lII1Iil(iIlI1I11li1III111II, 2) == 72 then lIllll11Iil1iillI1I1l = I1iiiIIIII1iill1l1I(Iiiil11l11lI11I1i1i(iIlI1I11li1III111II, 1, 1)) return "" else local iilliliiIi1l1li1I1I = li1I1i1Iiilll11IIiI(I1iiiIIIII1iill1l1I(iIlI1I11li1III111II, 16)) if lIllll11Iil1iillI1I1l then local iI1IiIili1IiIliil1i = liiilII111I1l1iIi1I(iilliliiIi1l1li1I1I, lIllll11Iil1iillI1I1l) lIllll11Iil1iillI1I1l = nil return iI1IiIili1IiIliil1i else return iilliliiIi1l1li1I1I end end end) local function IIllIIll1iIiiIiiIii() local lI1iIIIilliiIlili1I = lIlliIlIiiI1lII1Iil(lIliiiliilllIl1Iiliil, iII1ili111l111I1ilI, iII1ili111l111I1ilI) iII1ili111l111I1ilI = iII1ili111l111I1ilI + 1 return lI1iIIIilliiIlili1I end local function llIIll1iIIi1IlIiil1() local lI1iIIIilliiIlili1I, iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i, ll1ilIiilIlli1l1I1I = lIlliIlIiiI1lII1Iil(lIliiiliilllIl1Iiliil, iII1ili111l111I1ilI, iII1ili111l111I1ilI + 3) iII1ili111l111I1ilI = iII1ili111l111I1ilI + 4 return ll1ilIiilIlli1l1I1I * 16777216 + iI1IiIili1IiIliil1i * 65536 + iilliliiIi1l1li1I1I * 256 + lI1iIIIilliiIlili1I end local function I1I1llIll1lIliiIi11(II11ilI1I111IiiliII, I11iIllIl1ilIlilllI, lIl1llIi1ii11iililI1I) if lIl1llIi1ii11iililI1I then local iilI1iliIil1illiIIl, lII1IIIIIIIiiIlIIIl = 0, 0 for lIlIIlIiil1IlIlI1Il11 = I11iIllIl1ilIlilllI, lIl1llIi1ii11iililI1I do iilI1iliIil1illiIIl = iilI1iliIil1illiIIl + 2 ^ lII1IIIIIIIiiIlIIIl * I1I1llIll1lIliiIi11(II11ilI1I111IiiliII, lIlIIlIiil1IlIlI1Il11) lII1IIIIIIIiiIlIIIl = lII1IIIIIIIiiIlIIIl + 1 end return iilI1iliIil1illiIIl else local ii1lii1li11llIlll1l = 2 ^ (I11iIllIl1ilIlilllI - 1) return ii1lii1li11llIlll1l <= II11ilI1I111IiiliII % (ii1lii1li11llIlll1l + ii1lii1li11llIlll1l) and 1 or 0 end end local function IiIl111II11iI1ll11I() local lI1iIIIilliiIlili1I, iilliliiIi1l1li1I1I = llIIll1iIIi1IlIiil1(), llIIll1iIIi1IlIiil1() if lI1iIIIilliiIlili1I == 0 and iilliliiIi1l1li1I1I == 0 then return 0 end return (-2 * I1I1llIll1lIliiIi11(iilliliiIi1l1li1I1I, 32) + 1) * 2 ^ (I1I1llIll1lIliiIi11(iilliliiIi1l1li1I1I, 21, 31) - 1023) * ((I1I1llIll1lIliiIi11(iilliliiIi1l1li1I1I, 1, 20) * 4294967296 + lI1iIIIilliiIlili1I) / 4503599627370496 + 1) end local lIllIlllliII11lII1I1I = bit or bit32 local IliIIIiII1lII11I1li = lIllIlllliII11lII1I1I and lIllIlllliII11lII1I1I.bxor or function(lI1iIIIilliiIlili1I, iilliliiIi1l1li1I1I) local IIl1ii111l1ilI11iii = 1 local iI1IiIili1IiIliil1i = 0 while lI1iIIIilliiIlili1I > 0 and iilliliiIi1l1li1I1I > 0 do local iIlilliIlllliliII1l = lI1iIIIilliiIlili1I % 2 local il1IllIliI1iI1Illi1 = iilliliiIi1l1li1I1I % 2 if iIlilliIlllliliII1l ~= il1IllIliI1iI1Illi1 then iI1IiIili1IiIliil1i = iI1IiIili1IiIliil1i + IIl1ii111l1ilI11iii end lI1iIIIilliiIlili1I = (lI1iIIIilliiIlili1I - iIlilliIlllliliII1l) / 2 iilliliiIi1l1li1I1I = (iilliliiIi1l1li1I1I - il1IllIliI1iI1Illi1) / 2 IIl1ii111l1ilI11iii = IIl1ii111l1ilI11iii * 2 end if lI1iIIIilliiIlili1I < iilliliiIi1l1li1I1I then lI1iIIIilliiIlili1I = iilliliiIi1l1li1I1I end while lI1iIIIilliiIlili1I > 0 do local iIlilliIlllliliII1l = lI1iIIIilliiIlili1I % 2 if iIlilliIlllliliII1l > 0 then iI1IiIili1IiIliil1i = iI1IiIili1IiIliil1i + IIl1ii111l1ilI11iii end lI1iIIIilliiIlili1I = (lI1iIIIilliiIlili1I - iIlilliIlllliliII1l) / 2 IIl1ii111l1ilI11iii = IIl1ii111l1ilI11iii * 2 end return iI1IiIili1IiIliil1i end local function IiIl11Il1iIIII11111(llII111iliIl1lliI11) local Ill1ll1iIilil1IliII = { lIlliIlIiiI1lII1Iil(lIliiiliilllIl1Iiliil, iII1ili111l111I1ilI, iII1ili111l111I1ilI + 3) } iII1ili111l111I1ilI = iII1ili111l111I1ilI + 4 local lI1iIIIilliiIlili1I = IliIIIiII1lII11I1li(Ill1ll1iIilil1IliII[1], lll1IlilII1IIIIl1il) local iilliliiIi1l1li1I1I = IliIIIiII1lII11I1li(Ill1ll1iIilil1IliII[2], lll1IlilII1IIIIl1il) local iI1IiIili1IiIliil1i = IliIIIiII1lII11I1li(Ill1ll1iIilil1IliII[3], lll1IlilII1IIIIl1il) local ll1ilIiilIlli1l1I1I = IliIIIiII1lII11I1li(Ill1ll1iIilil1IliII[4], lll1IlilII1IIIIl1il) lll1IlilII1IIIIl1il = (9 * lll1IlilII1IIIIl1il + llII111iliIl1lliI11) % 256 return ll1ilIiilIlli1l1I1I * 16777216 + iI1IiIili1IiIliil1i * 65536 + iilliliiIi1l1li1I1I * 256 + lI1iIIIilliiIlili1I end local function iiIl1IIlI1lI1IlilII(iIlii1IIiliii1iIlIi) local IillIlIIl11l1illl1l = llIIll1iIIi1IlIiil1() local ill1iIi11lIi11IIlil = "" for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, IillIlIIl11l1illl1l do ill1iIi11lIi11IIlil = ill1iIi11lIi11IIlil .. li1I1i1Iiilll11IIiI(IliIIIiII1lII11I1li(lIlliIlIiiI1lII1Iil(lIliiiliilllIl1Iiliil, iII1ili111l111I1ilI + lIlIIlIiil1IlIlI1Il11 - 1), lIl1illIl1Il11iiIII1i)) lIl1illIl1Il11iiIII1i = (iIlii1IIiliii1iIlIi * lIl1illIl1Il11iiIII1i + 91) % 256 end iII1ili111l111I1ilI = iII1ili111l111I1ilI + IillIlIIl11l1illl1l return ill1iIi11lIi11IIlil end lIl1illIl1Il11iiIII1i = IIllIIll1iIiiIiiIii() lll1IlilII1IIIIl1il = IIllIIll1iIiiIiiIii() local IIIl1III1l1lliI11I1 = {} for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, IIllIIll1iIiiIiiIii() do local lIll11lilIIli1iII1lIi = IIllIIll1iIiiIiiIii() local ll1ilIiII11Iililili = (lIlIIlIiil1IlIlI1Il11 - 1) * 2 IIIl1III1l1lliI11I1[ll1ilIiII11Iililili] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, 1, 4) IIIl1III1l1lliI11I1[ll1ilIiII11Iililili + 1] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, 5, 8) end local function lI1i1llliII1llI1l1l() local iIiIIIiilllIlli1II1 = { nil, nil, nil, {}, {}, {}, {} } IIllIIll1iIiiIiiIii() llIIll1iIIi1IlIiil1() iIiIIIiilllIlli1II1[2] = IIllIIll1iIiiIiiIii() iIiIIIiilllIlli1II1[1] = IIllIIll1iIiiIiiIii() iIiIIIiilllIlli1II1[3] = IIllIIll1iIiiIiiIii() IIllIIll1iIiiIiiIii() local ill1III1l1i1Ili111l = llIIll1iIIi1IlIiil1() for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, ill1III1l1i1Ili111l do iIiIIIiilllIlli1II1[6][lIlIIlIiil1IlIlI1Il11 - Il1IIiIl1I11lIIIIl1] = lI1i1llliII1llI1l1l() end llIIll1iIIi1IlIiil1() local ill1III1l1i1Ili111l = llIIll1iIIi1IlIiil1() - (#{ 4258, 3130, 6509, 507, 2315, 414, 6544, 3343, 321, 3588, 5795, 1721, 3275, 1985, 1388, 3687, 1536, 1115, 2014, 2556, 2244 } + ii1ll11i1l11ll1iIii + 133640) local Il1Illliillil1IIi1I = IIllIIll1iIiiIiiIii() for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, ill1III1l1i1Ili111l do local l1iIiIi1lIiiiI11Ill local lIii1lIl1iIli1l1ilI = IIllIIll1iIiiIiiIii() if lIii1lIl1iIli1l1ilI == #{ 5071, 4275, 3515, 318, 966, 5931, 846, 976, 2106, 3370, 1397, 237, 3390, 6431, 38, 3089, 3215, 572, 5493, 1318, 5188, 2694 } + ii1ll11i1l11ll1iIii + -17 then l1iIiIi1lIiiiI11Ill = Iiiil11l11lI11I1i1i(iiIl1IIlI1lI1IlilII(#{ 709, 4427, 4193, 5789, 334, 5636, 338, 656, 3187, 2190, 2328, 1147, 6600, 5417, 2882, 6827, 3310, 1145, 106, 5951, 4302, 4545, 277 } + ii1ll11i1l11ll1iIii + 44), #{ 2886, 4603, 806 }) end if lIii1lIl1iIli1l1ilI == #{ 3723, 5542, 5990, 3246, 4976, 4641, 766, 6733, 3477, 3129, 6842, 6281, 3077, 4497, 5361, 5200, 2492, 576, 4559, 1028 } + ii1ll11i1l11ll1iIii + 164 then l1iIiIi1lIiiiI11Ill = IiIl111II11iI1ll11I() end if lIii1lIl1iIli1l1ilI == #{ 3127, 862, 1539, 5646, 5828, 2469, 1182, 2812, 2249, 6401, 353 } then l1iIiIi1lIiiiI11Ill = #{ 348, 3124, 4449, 738, 5781, 4250, 3540, 1768, 3484, 1433, 4181, 5433, 2249, 2064, 5318, 2017, 2779, 5887, 2839, 1270, 2197, 2889, 5687 } + ii1ll11i1l11ll1iIii + 43790 == #{ 3192, 99, 1006, 5056, 3815, 3051, 5814, 5189, 5974, 1544, 1005, 1961, 4027, 4847, 5149, 1655, 269, 6612, 3953, 3368, 1804, 5935, 4842 } + ii1ll11i1l11ll1iIii + 90806 end if lIii1lIl1iIli1l1ilI == #{ 5898, 3975, 3956, 4539, 5662, 5974, 6304, 4927, 1111, 773, 2754, 4926, 491, 2046, 6870, 1975, 3215, 3948, 202, 6405, 6004, 1815, 3330, 5343 } + ii1ll11i1l11ll1iIii + -14 then l1iIiIi1lIiiiI11Ill = Iiiil11l11lI11I1i1i(iiIl1IIlI1lI1IlilII(Il1Illliillil1IIi1I), #{ 3234, 5987, 492, 5421 }) end if lIii1lIl1iIli1l1ilI == #{ 3754, 2606, 1938, 5577, 1883, 1943, 3851, 3173, 1441, 4669, 5798, 2055, 3349, 4298, 2709, 3581, 2015, 322, 2058, 4268, 3511, 2385, 5821 } + ii1ll11i1l11ll1iIii + 61 then l1iIiIi1lIiiiI11Ill = #{ 3115, 1932, 1520, 1275, 1357, 3047, 5122, 4914, 1400, 3114, 4835, 4629, 6935, 504, 457, 4133, 2363, 6225, 119, 1918, 77, 4039 } + ii1ll11i1l11ll1iIii + 33808 == #{ 3115, 1932, 1520, 1275, 1357, 3047, 5122, 4914, 1400, 3114, 4835, 4629, 6935, 504, 457, 4133, 2363, 6225, 119, 1918, 77, 4039 } + ii1ll11i1l11ll1iIii + 33808 end if lIii1lIl1iIli1l1ilI == #{ 4889, 2667, 6559, 5440, 6272, 2237, 4238, 4185, 22, 4408, 3656, 4628, 1940, 4968, 3763, 2933, 5617, 1356, 5077, 2770, 6379, 2198 } + ii1ll11i1l11ll1iIii + -4 then l1iIiIi1lIiiiI11Ill = IiIl111II11iI1ll11I() end if lIii1lIl1iIli1l1ilI == #{ 5196, 570, 198, 3006, 6240, 2011, 1422, 4393, 3996, 5774, 6165, 2331, 3431, 455, 537, 6251, 5223, 3845, 5210, 3783 } + ii1ll11i1l11ll1iIii + 97 then l1iIiIi1lIiiiI11Ill = IIllIIll1iIiiIiiIii() end if lIii1lIl1iIli1l1ilI == #{ 454, 3588, 4695, 3060, 3022, 6480, 3919, 2677, 4327, 134, 832, 2545, 1444, 1808, 6215, 6570, 5663, 4626, 4450, 5928, 4361, 5455, 4019, 4524 } + ii1ll11i1l11ll1iIii + 45 then l1iIiIi1lIiiiI11Ill = Iiiil11l11lI11I1i1i(iiIl1IIlI1lI1IlilII(Il1Illliillil1IIi1I), #{777}) end if lIii1lIl1iIli1l1ilI == #{ 4619, 3953, 5995, 3412, 1572, 4124, 2007, 57, 4698, 5032, 6179, 478, 1889, 369, 1251, 5767, 4538, 5458, 4197, 2316, 3746, 6237, 512, 572 } + ii1ll11i1l11ll1iIii + 12 then l1iIiIi1lIiiiI11Ill = IIllIIll1iIiiIiiIii() + llIIll1iIIi1IlIiil1() + IiIl111II11iI1ll11I() end iIiIIIiilllIlli1II1[4][lIlIIlIiil1IlIlI1Il11 - Il1IIiIl1I11lIIIIl1] = l1iIiIi1lIiiiI11Ill end local ill1III1l1i1Ili111l = llIIll1iIIi1IlIiil1() for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, ill1III1l1i1Ili111l do iIiIIIiilllIlli1II1[5][lIlIIlIiil1IlIlI1Il11] = llIIll1iIIi1IlIiil1() end local l1I11I1Il11iilI1lII = llIIll1iIIi1IlIiil1() - (#{ 4720, 5329, 4195, 1413, 6511, 4143, 4015, 190, 2314, 715, 400, 248, 5691, 4479, 4661, 6202, 2247, 1413, 4305, 1978, 3726 } + ii1ll11i1l11ll1iIii + 133667) local IiIiilii1II11iI1lll = IIllIIll1iIiiIiiIii() for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, l1I11I1Il11iilI1lII do local l1llIli11liIi1i1il1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIll11lilIIli1iII1lIi = IiIl11Il1iIIII11111(IiIiilii1II11iI1lll) l1llIli11liIi1i1il1[7] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{5176}, #{ 1017, 1674, 4859, 6814, 3549, 3981, 2877, 533, 5758, 2766, 6170, 3377, 887, 4521, 721, 3159, 6531, 5843 }) l1llIli11liIi1i1il1[6] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{ 3348, 2932, 3033, 6193, 4439, 1126, 4833, 2698, 2112, 6442, 5709, 4654, 1128, 2477, 3291, 2299, 6313, 369, 4382, 727, 6797, 2441, 1541 } + ii1ll11i1l11ll1iIii + -49, #{ 1759, 1816, 4125, 3496, 386, 619, 2589, 3547, 209, 1087, 6948, 6671, 5422, 7, 2779, 938, 4327, 1605, 2096, 674 } + ii1ll11i1l11ll1iIii + -41) l1llIli11liIi1i1il1[5] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{ 4720, 1414, 673, 676, 5858, 5050, 4215, 1836, 5251, 3056, 1461, 5234, 3896, 5695, 319, 371, 5339, 1296, 6650 }, #{ 1529, 982, 6903, 505, 6091, 5056, 3744, 4728, 6500, 3620, 5633, 4746, 1693, 2802, 6962, 1935, 717, 1055, 2100, 4890, 5672, 1805 } + ii1ll11i1l11ll1iIii + -49) l1llIli11liIi1i1il1[2] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{ 3117, 3434, 4147, 3678, 5960, 6645, 1415, 3392, 1975, 3592 }, #{ 3972, 6242, 3909, 3116, 3660, 887, 6266, 1364, 6592, 1511, 477, 2572, 6157, 3707, 2808, 4945, 3170, 5494 }) l1llIli11liIi1i1il1[8] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{2412}, #{ 6454, 243, 192, 689, 5634, 4794, 3734, 6309, 2838 }) l1llIli11liIi1i1il1[32414] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{1892}, #{ 2534, 2294, 1004, 4001, 661, 1531, 6094, 767, 54 }) l1llIli11liIi1i1il1[54065] = I1I1llIll1lIliiIi11(lIll11lilIIli1iII1lIi, #{5710}, #{ 1775, 242, 4317, 3903, 1737, 6468, 5286, 5689, 2294, 4369, 3821, 205, 3856, 2981, 6428, 2044, 1595, 3941 }) iIiIIIiilllIlli1II1[7][lIlIIlIiil1IlIlI1Il11] = l1llIli11liIi1i1il1 end for lIlIIlIiil1IlIlI1Il11 = Il1IIiIl1I11lIIIIl1, l1I11I1Il11iilI1lII do local l1llIli11liIi1i1il1 = iIiIIIiilllIlli1II1[7][lIlIIlIiil1IlIlI1Il11] local l1i111IlIIIlilliIil = IIIl1III1l1lliI11I1[l1llIli11liIi1i1il1[6]] if l1i111IlIIIlilliIil == #{ 5193, 4660, 1665, 5646 } then l1llIli11liIi1i1il1[9] = iIiIIIiilllIlli1II1[4][l1llIli11liIi1i1il1[7]] end if l1i111IlIIIlilliIil == #{4853, 244} and l1llIli11liIi1i1il1[2] > 255 then l1llIli11liIi1i1il1[1] = true l1llIli11liIi1i1il1[10] = iIiIIIiilllIlli1II1[4][l1llIli11liIi1i1il1[2] - 256] end if l1i111IlIIIlilliIil == #{1797} and l1llIli11liIi1i1il1[8] > 255 then l1llIli11liIi1i1il1[4] = true l1llIli11liIi1i1il1[3] = iIiIIIiilllIlli1II1[4][l1llIli11liIi1i1il1[8] - 256] end if l1i111IlIIIlilliIil == #{ 1133, 3196, 3755 } then if l1llIli11liIi1i1il1[8] > 255 then l1llIli11liIi1i1il1[4] = true l1llIli11liIi1i1il1[3] = iIiIIIiilllIlli1II1[4][l1llIli11liIi1i1il1[8] - 256] end if l1llIli11liIi1i1il1[2] > 255 then l1llIli11liIi1i1il1[1] = true l1llIli11liIi1i1il1[10] = iIiIIIiilllIlli1II1[4][l1llIli11liIi1i1il1[2] - 256] end end end return iIiIIIiilllIlli1II1 end local function lIlIIIiIIiI1iii1I11i1(iIiIIIiilllIlli1II1, lIliI1IiIl111liiI1i1l, l1i1liI1iIlil11Ili1) local i1liiilIlilI11lil1l, IllIi1Ill1lIII1iIIl = 12, 17 local I1I1i11l1lI11lIiI1l = iIiIIIiilllIlli1II1[7] local liIIIiii1Il11lIiili = 1 local lIll1II1liIllliI11ll1 = iIiIIIiilllIlli1II1[6] local iI11liI1111I1iil1l1 = iIiIIIiilllIlli1II1[2] local lIl1iIIIiII1IiiIIiiII = iIiIIIiilllIlli1II1[3] local lIll1I1i1IiI1l1i1lliI = 6 local i1IlII1illI1ii1llii = iIiIIIiilllIlli1II1[5] local lIliIl1illliIil1IIlIi = 8 local function lIil1Illilli1i1lIII(...) local li1Ii1iiIlIlI1lIiiI = 0 local lIliIIiI1Ii1iIiiii1lI = { ill1IilI11IliIiIiii({}, 1, lIl1iIIIiII1IiiIIiiII) } local iili1l1lI1IiIll1lll = 1 local lIliili11l1iiIlll1Ili = {} local i1IllI1iiii1IIiI1li = {} local lIliI1IiIl111liiI1i1l = iIlill1i1ilIll11il1() local lIllIlIlIIIii1llIIIli = { ... } local Ii11IIIi1iiliiIiIlI = #lIllIlIlIIIii1llIIIli - 1 for lIlIIlIiil1IlIlI1Il11 = 0, Ii11IIIi1iiliiIiIlI do if lIlIIlIiil1IlIlI1Il11 < iI11liI1111I1iil1l1 then lIliIIiI1Ii1iIiiii1lI[lIlIIlIiil1IlIlI1Il11] = lIllIlIlIIIii1llIIIli[lIlIIlIiil1IlIlI1Il11 + 1] end end local function l1IiIl1IIllll1111i1(...) local iI1IiIili1IiIliil1i = I1iI1ll1llIIi1IIi1I("#", ...) local lliI11I111ilii11ilI = { ... } return iI1IiIili1IiIliil1i, lliI11I111ilii11ilI end local function lIlIllI1iIi1IiIllllII() while true do local II1l1ll1iI11111IlII = I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] local IIli1IIliI1iII11iII = II1l1ll1iI11111IlII[6] iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 if IIli1IIliI1iII11iII < 11 then if IIli1IIliI1iII11iII >= 5 then if IIli1IIliI1iII11iII < 8 then if IIli1IIliI1iII11iII >= 6 then if IIli1IIliI1iII11iII ~= 7 then if II1l1ll1iI11111IlII[8] == 75 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 17, [5] = (II1l1ll1iI11111IlII[5] - 155) % 256, [8] = (II1l1ll1iI11111IlII[2] - 155) % 256 } else local lIli1111llI11ilI1lIiI = II1l1ll1iI11111IlII[5] local ll1ilIiII11Iililili = lIli1111llI11ilI1lIiI + 2 local IliIiliI111lllIli1I = { lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI](lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI + 1], lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI + 2]) } for lIlIIlIiil1IlIlI1Il11 = 1, II1l1ll1iI11111IlII[2] do lIliIIiI1Ii1iIiiii1lI[ll1ilIiII11Iililili + lIlIIlIiil1IlIlI1Il11] = IliIiliI111lllIli1I[lIlIIlIiil1IlIlI1Il11] end if lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI + 3] ~= nil then lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI + 2] = lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI + 3] else iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end end else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = { ill1IilI11IliIiIiii(lIll1ilIi1IlIiIIIIIIl, 1, II1l1ll1iI11111IlII[8] == 0 and 255 or II1l1ll1iI11111IlII[8]) } end else local iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[4] then iilliliiIi1l1li1I1I = II1l1ll1iI11111IlII[3] else iilliliiIi1l1li1I1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = iilliliiIi1l1li1I1I + iI1IiIili1IiIliil1i end elseif IIli1IIliI1iII11iII >= 9 then if IIli1IIliI1iII11iII == 10 then local IliIiliI111lllIli1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] for lIlIIlIiil1IlIlI1Il11 = II1l1ll1iI11111IlII[8] + 1, II1l1ll1iI11111IlII[2] do IliIiliI111lllIli1I = IliIiliI111lllIli1I .. lIliIIiI1Ii1iIiiii1lI[lIlIIlIiil1IlIlI1Il11] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = IliIiliI111lllIli1I else local iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[4] then iilliliiIi1l1li1I1I = II1l1ll1iI11111IlII[3] else iilliliiIi1l1li1I1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = iilliliiIi1l1li1I1I - iI1IiIili1IiIliil1i end else local iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]][iI1IiIili1IiIliil1i] end elseif IIli1IIliI1iII11iII >= 2 then if IIli1IIliI1iII11iII >= 3 then if IIli1IIliI1iII11iII ~= 4 then local lIliiIiII11ilIiIlIl = lIll1II1liIllliI11ll1[II1l1ll1iI11111IlII[7]] local IilI1IiIi1illi1ii11 = {} if lIliiIiII11ilIiIlIl[liIIIiii1Il11lIiili] > 0 then do local iIilI1illIIi1lll11l = {} IilI1IiIi1illi1ii11 = i11IliIi1iiilliiil1({}, { __index = function(lliI11I111ilii11ilI, i111i1l1llllIiiil1I) local lIlli1i1iIi1Il1lIIlli = iIilI1illIIi1lll11l[i111i1l1llllIiiil1I] return lIlli1i1iIi1Il1lIIlli[1][lIlli1i1iIi1Il1lIIlli[2]] end, __newindex = function(lliI11I111ilii11ilI, i111i1l1llllIiiil1I, iIIliilI1I1illI1I1l) local lIlli1i1iIi1Il1lIIlli = iIilI1illIIi1lll11l[i111i1l1llllIiiil1I] lIlli1i1iIi1Il1lIIlli[1][lIlli1i1iIi1Il1lIIlli[2]] = iIIliilI1I1illI1I1l end }) for lIlIIlIiil1IlIlI1Il11 = 1, lIliiIiII11ilIiIlIl[liIIIiii1Il11lIiili] do local iI1ilil1lilIiili1l1 = I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] if iI1ilil1lilIiili1l1[lIll1I1i1IiI1l1i1lliI] == i1liiilIlilI11lil1l then iIilI1illIIi1lll11l[lIlIIlIiil1IlIlI1Il11 - 1] = { lIliIIiI1Ii1iIiiii1lI, iI1ilil1lilIiili1l1[lIliIl1illliIil1IIlIi] } elseif iI1ilil1lilIiili1l1[lIll1I1i1IiI1l1i1lliI] == IllIi1Ill1lIII1iIIl then iIilI1illIIi1lll11l[lIlIIlIiil1IlIlI1Il11 - 1] = { l1i1liI1iIlil11Ili1, iI1ilil1lilIiili1l1[lIliIl1illliIil1IIlIi] } end iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end if not lIliili11l1iiIlll1Ili[lIliIIiI1Ii1iIiiii1lI] then lIliili11l1iiIlll1Ili[lIliIIiI1Ii1iIiiii1lI] = {iIilI1illIIi1lll11l} else lIllIl1li11IlIll11IlI(lIliili11l1iiIlll1Ili[lIliIIiI1Ii1iIiiii1lI], iIilI1illIIi1lll11l) end end end local iIiiIIIIi1IiiIiI1Il = lIlIIIiIIiI1iii1I11i1(lIliiIiII11ilIiIlIl, lIliI1IiIl111liiI1i1l, IilI1IiIi1illi1ii11) lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = iIiiIIIIi1IiiIiI1Il else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = II1l1ll1iI11111IlII[8] ~= 0 if II1l1ll1iI11111IlII[2] ~= 0 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end end else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = II1l1ll1iI11111IlII[9] end elseif IIli1IIliI1iII11iII == 1 then local lIli1111llI11ilI1lIiI = II1l1ll1iI11111IlII[5] local lIllIlIlIIIii1llIIIli = II1l1ll1iI11111IlII[8] local lIlIIIlil111l1l111I1i = II1l1ll1iI11111IlII[2] local lIli11lI1Ililii1ii111, I1IIi1l11lilI1iilil, lIlIllI1iIi1IiIllllII if lIllIlIlIIIii1llIIIli ~= 1 then if lIllIlIlIIIii1llIIIli ~= 0 then I1IIi1l11lilI1iilil = lIli1111llI11ilI1lIiI + lIllIlIlIIIii1llIIIli - 1 else I1IIi1l11lilI1iilil = li1Ii1iiIlIlI1lIiiI end I1IIi1l11lilI1iilil, lIli11lI1Ililii1ii111 = l1IiIl1IIllll1111i1(lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI](ill1IilI11IliIiIiii(lIliIIiI1Ii1iIiiii1lI, lIli1111llI11ilI1lIiI + 1, I1IIi1l11lilI1iilil))) else I1IIi1l11lilI1iilil, lIli11lI1Ililii1ii111 = l1IiIl1IIllll1111i1(lIliIIiI1Ii1iIiiii1lI[lIli1111llI11ilI1lIiI]()) end if lIlIIIlil111l1l111I1i ~= 1 then if lIlIIIlil111l1l111I1i ~= 0 then I1IIi1l11lilI1iilil = lIli1111llI11ilI1lIiI + lIlIIIlil111l1l111I1i - 2 li1Ii1iiIlIlI1lIiiI = I1IIi1l11lilI1iilil + 1 else I1IIi1l11lilI1iilil = I1IIi1l11lilI1iilil + lIli1111llI11ilI1lIiI - 1 li1Ii1iiIlIlI1lIiiI = I1IIi1l11lilI1iilil end lIlIllI1iIi1IiIllllII = 0 for lIlIIlIiil1IlIlI1Il11 = lIli1111llI11ilI1lIiI, I1IIi1l11lilI1iilil do lIlIllI1iIi1IiIllllII = lIlIllI1iIi1IiIllllII + 1 lIliIIiI1Ii1iIiiii1lI[lIlIIlIiil1IlIlI1Il11] = lIli11lI1Ililii1ii111[lIlIllI1iIi1IiIllllII] end else li1Ii1iiIlIlI1lIiiI = lIli1111llI11ilI1lIiI - 1 end for lIlIIlIiil1IlIlI1Il11 = li1Ii1iiIlIlI1lIiiI + 1, lIl1iIIIiII1IiiIIiiII do lIliIIiI1Ii1iIiiii1lI[lIlIIlIiil1IlIlI1Il11] = nil end elseif II1l1ll1iI11111IlII[2] == 99 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 15, [5] = (II1l1ll1iI11111IlII[5] - 229) % 256, [8] = (II1l1ll1iI11111IlII[8] - 229) % 256 } else l1i1liI1iIlil11Ili1[II1l1ll1iI11111IlII[8]] = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] end elseif IIli1IIliI1iII11iII >= 17 then if IIli1IIliI1iII11iII >= 20 then if IIli1IIliI1iII11iII < 21 then if II1l1ll1iI11111IlII[2] == 166 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 0, [5] = (II1l1ll1iI11111IlII[5] - 164) % 256, [8] = (II1l1ll1iI11111IlII[8] - 164) % 256 } else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = #lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end elseif IIli1IIliI1iII11iII ~= 22 then lIliI1IiIl111liiI1i1l[II1l1ll1iI11111IlII[9]] = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] else iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + (II1l1ll1iI11111IlII[7] - IIlllIil11l1iIilIil) end elseif IIli1IIliI1iII11iII >= 18 then if IIli1IIliI1iII11iII == 19 then lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = lIliI1IiIl111liiI1i1l[II1l1ll1iI11111IlII[9]] else local iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[4] then iilliliiIi1l1li1I1I = II1l1ll1iI11111IlII[3] else iilliliiIi1l1li1I1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end if iilliliiIi1l1li1I1I == iI1IiIili1IiIliil1i ~= (II1l1ll1iI11111IlII[5] ~= 0) then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end end elseif II1l1ll1iI11111IlII[2] == 217 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 16, [5] = (II1l1ll1iI11111IlII[5] - 169) % 256, [2] = (II1l1ll1iI11111IlII[8] - 169) % 256 } else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = l1i1liI1iIlil11Ili1[II1l1ll1iI11111IlII[8]] end elseif IIli1IIliI1iII11iII < 14 then if IIli1IIliI1iII11iII >= 12 then if IIli1IIliI1iII11iII == 13 then local iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[4] then iilliliiIi1l1li1I1I = II1l1ll1iI11111IlII[3] else iilliliiIi1l1li1I1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end if iilliliiIi1l1li1I1I < iI1IiIili1IiIliil1i ~= (II1l1ll1iI11111IlII[5] ~= 0) then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end else lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end else local iilliliiIi1l1li1I1I, iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[4] then iilliliiIi1l1li1I1I = II1l1ll1iI11111IlII[3] else iilliliiIi1l1li1I1I = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] end if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]][iilliliiIi1l1li1I1I] = iI1IiIili1IiIliil1i end elseif IIli1IIliI1iII11iII >= 15 then if IIli1IIliI1iII11iII ~= 16 then lIliili11l1iiIlll1Ili[lIliIIiI1Ii1iIiiii1lI] = nil local lIli1111llI11ilI1lIiI = II1l1ll1iI11111IlII[5] local lI1i1I111i1il1iIiil = II1l1ll1iI11111IlII[8] if lI1i1I111i1il1iIiil == 1 then return true end local I1IIi1l11lilI1iilil = lIli1111llI11ilI1lIiI + lI1i1I111i1il1iIiil - 2 if lI1i1I111i1il1iIiil == 0 then I1IIi1l11lilI1iilil = li1Ii1iiIlIlI1lIiiI end return true, lIli1111llI11ilI1lIiI, I1IIi1l11lilI1iilil elseif II1l1ll1iI11111IlII[8] == 152 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 12, [5] = (II1l1ll1iI11111IlII[5] - 7) % 256, [8] = (II1l1ll1iI11111IlII[2] - 7) % 256 } elseif II1l1ll1iI11111IlII[8] == 173 then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll - 1 I1I1i11l1lI11lIiI1l[iili1l1lI1IiIll1lll] = { [6] = 6, [5] = (II1l1ll1iI11111IlII[5] - 187) % 256, [2] = (II1l1ll1iI11111IlII[2] - 187) % 256 } elseif not not lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] == (II1l1ll1iI11111IlII[2] == 0) then iili1l1lI1IiIll1lll = iili1l1lI1IiIll1lll + 1 end else local II1IIliiIiIlIi11Iii = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[8]] local iI1IiIili1IiIliil1i if II1l1ll1iI11111IlII[1] then iI1IiIili1IiIliil1i = II1l1ll1iI11111IlII[10] else iI1IiIili1IiIliil1i = lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[2]] end lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5] + 1] = II1IIliiIiIlIi11Iii lIliIIiI1Ii1iIiiii1lI[II1l1ll1iI11111IlII[5]] = II1IIliiIiIlIi11Iii[iI1IiIili1IiIliil1i] end end end local i1i1lIiilIIIIiIIill, ill1iIi11lIi11IIlil, ll1Ii1lll1i1iIIi1Il, IlIiIlIIl1I1Ill1li1 = iiIIII1il1lI1II1II1(lIlIllI1iIi1IiIllllII) if i1i1lIiilIIIIiIIill then if ll1Ii1lll1i1iIIi1Il then return ill1IilI11IliIiIiii(lIliIIiI1Ii1iIiiii1lI, ll1Ii1lll1i1iIIi1Il, IlIiIlIIl1I1Ill1li1) end else I1iilIIiIllli11lIIi("Luraph Script:" .. (i1IlII1illI1ii1llii[iili1l1lI1IiIll1lll - 1] or "") .. ": " .. lIlI1ililiiIliIl1IiIl(ill1iIi11lIi11IIlil), 0) end end lIli1IllliI1Ii1lilIl1(lIil1Illilli1i1lIII, lIliI1IiIl111liiI1i1l) return lIil1Illilli1i1lIII end local iIiIIiII1IIiI1iil1l = lI1i1llliII1llI1l1l() return lIlIIIiIIiI1iii1I11i1(iIiIIiII1IIiI1iil1l, lIliI1IiIl111liiI1i1l)() end l1I1iIi1i1llIIiiiiIlill1i1ilIll11il1()) 
