local IlIlllIiIiiIilIlllI = assert local lll11I1ilI1Ii1l1Iil = select local lIliIlIliiI1Ilil1i1ll = tonumber local iiIil1lliIIll1l1lI1 = unpack local lIll11lii1IiiliiiIlii = pcall local liil111ilIIiliilIlI = setfenv local I1i1iiiIlli1I1iIIil = setmetatable local IiIIIIililll1IIIllI = type local lii11lllIlIi1i11i1I = getfenv local ill1ilIIIiI1illiilI = tostring local l11il1l1III11l1IIil = error local IiliI111Il11ii1il1I = string.sub local Iill1IIi1i11Ii11IIi = string.byte local IliillllIl1I11iiIlI = string.char local iIliiI1llill111iliI = string.rep local lIIIiIIlil1i1illlli = string.gsub local lIli1lll11Il1IiiIliI1 = string.match local I11li111iil11liilll = table.insert local I1iii1lli1Ii1l1iI1l = Iill1IIi1i11Ii11IIi("=", 1) local i1i1l1I1i11iii1i1Il, IiIIlil1i111II1illI = #{6690}, #{ 1532, 2496, 3348, 3195, 3245, 5003, 5665, 5305, 5649, 3403, 3798, 870, 3128, 138, 3083, 826, 1523, 4602, 6363, 3939, 1108 } + I1iii1lli1Ii1l1iI1l + 130989 local i11iiI1IlII11ll1iI1 = {} local ilIilIiiliiil1IIlII = 1 local lIlliIi1lii1IIiII1I1I, iiilIIlII1lIIiIi1lI local function lIllilIi1ii1IlIlii1II(lIlilillilIliili1l11l, llllI1ll1liii1l1iiI) local lIliiIIliIl11111l1III lIlilillilIliili1l11l = lIIIiIIlil1i1illlli(IiliI111Il11ii1il1I(lIlilillilIliili1l11l, 5), "..", function(IiiI1llii1Ill1i1Iii) if Iill1IIi1i11Ii11IIi(IiiI1llii1Ill1i1Iii, 2) == 72 then lIliiIIliIl11111l1III = lIliIlIliiI1Ilil1i1ll(IiliI111Il11ii1il1I(IiiI1llii1Ill1i1Iii, 1, 1)) return "" else local lIlli11I1I1iIIlIli1iI = IliillllIl1I11iiIlI(lIliIlIliiI1Ilil1i1ll(IiiI1llii1Ill1i1Iii, 16)) if lIliiIIliIl11111l1III then local lIl1I1l1II1Il11l1lIIi = iIliiI1llill111iliI(lIlli11I1I1iIIlIli1iI, lIliiIIliIl11111l1III) lIliiIIliIl11111l1III = nil return lIl1I1l1II1Il11l1lIIi else return lIlli11I1I1iIIlIli1iI end end end) local function lIl1I1IliIli1ii11l1l1() local l1iiIiiIllii1li1ii1 = Iill1IIi1i11Ii11IIi(lIlilillilIliili1l11l, ilIilIiiliiil1IIlII, ilIilIiiliiil1IIlII) ilIilIiiliiil1IIlII = ilIilIiiliiil1IIlII + 1 return l1iiIiiIllii1li1ii1 end local function lIllIIIii1iIlll1iliii() local l1iiIiiIllii1li1ii1, lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi, I1IlIi1llI1Ii1II1ll = Iill1IIi1i11Ii11IIi(lIlilillilIliili1l11l, ilIilIiiliiil1IIlII, ilIilIiiliiil1IIlII + 3) ilIilIiiliiil1IIlII = ilIilIiiliiil1IIlII + 4 return I1IlIi1llI1Ii1II1ll * 16777216 + lIl1I1l1II1Il11l1lIIi * 65536 + lIlli11I1I1iIIlIli1iI * 256 + l1iiIiiIllii1li1ii1 end local function IilliiIlI1llI1li1lI(lIl1llliIiillIl11l1li, llll1lIlliI11I11liI, lIl1lII111lIlll1i11li) if lIl1lII111lIlll1i11li then local IilIIliiI1ll11Ilii1, iIiil1IiIII1il11lIi = 0, 0 for lliil1II11IliIi1I1I = llll1lIlliI11I11liI, lIl1lII111lIlll1i11li do IilIIliiI1ll11Ilii1 = IilIIliiI1ll11Ilii1 + 2 ^ iIiil1IiIII1il11lIi * IilliiIlI1llI1li1lI(lIl1llliIiillIl11l1li, lliil1II11IliIi1I1I) iIiil1IiIII1il11lIi = iIiil1IiIII1il11lIi + 1 end return IilIIliiI1ll11Ilii1 else local l1lli1111lli1lliill = 2 ^ (llll1lIlliI11I11liI - 1) return l1lli1111lli1lliill <= lIl1llliIiillIl11l1li % (l1lli1111lli1lliill + l1lli1111lli1lliill) and 1 or 0 end end local function iIiiIi1li111I1l1lIi() local l1iiIiiIllii1li1ii1, lIlli11I1I1iIIlIli1iI = lIllIIIii1iIlll1iliii(), lIllIIIii1iIlll1iliii() if l1iiIiiIllii1li1ii1 == 0 and lIlli11I1I1iIIlIli1iI == 0 then return 0 end return (-2 * IilliiIlI1llI1li1lI(lIlli11I1I1iIIlIli1iI, 32) + 1) * 2 ^ (IilliiIlI1llI1li1lI(lIlli11I1I1iIIlIli1iI, 21, 31) - 1023) * ((IilliiIlI1llI1li1lI(lIlli11I1I1iIIlIli1iI, 1, 20) * 4294967296 + l1iiIiiIllii1li1ii1) / 4503599627370496 + 1) end local Ii1IIlII1Ii11iI1I1l = bit or bit32 local l1i1I1i11l1lIlIlI11 = Ii1IIlII1Ii11iI1I1l and Ii1IIlII1Ii11iI1I1l.bxor or function(l1iiIiiIllii1li1ii1, lIlli11I1I1iIIlIli1iI) local IIIiiiIiiliIlIiiIii = 1 local lIl1I1l1II1Il11l1lIIi = 0 while l1iiIiiIllii1li1ii1 > 0 and lIlli11I1I1iIIlIli1iI > 0 do local Iiil1III11lill1l11I = l1iiIiiIllii1li1ii1 % 2 local lIllii1iIi1lIIliIIi = lIlli11I1I1iIIlIli1iI % 2 if Iiil1III11lill1l11I ~= lIllii1iIi1lIIliIIi then lIl1I1l1II1Il11l1lIIi = lIl1I1l1II1Il11l1lIIi + IIIiiiIiiliIlIiiIii end l1iiIiiIllii1li1ii1 = (l1iiIiiIllii1li1ii1 - Iiil1III11lill1l11I) / 2 lIlli11I1I1iIIlIli1iI = (lIlli11I1I1iIIlIli1iI - lIllii1iIi1lIIliIIi) / 2 IIIiiiIiiliIlIiiIii = IIIiiiIiiliIlIiiIii * 2 end if l1iiIiiIllii1li1ii1 < lIlli11I1I1iIIlIli1iI then l1iiIiiIllii1li1ii1 = lIlli11I1I1iIIlIli1iI end while l1iiIiiIllii1li1ii1 > 0 do local Iiil1III11lill1l11I = l1iiIiiIllii1li1ii1 % 2 if Iiil1III11lill1l11I > 0 then lIl1I1l1II1Il11l1lIIi = lIl1I1l1II1Il11l1lIIi + IIIiiiIiiliIlIiiIii end l1iiIiiIllii1li1ii1 = (l1iiIiiIllii1li1ii1 - Iiil1III11lill1l11I) / 2 IIIiiiIiiliIlIiiIii = IIIiiiIiiliIlIiiIii * 2 end return lIl1I1l1II1Il11l1lIIi end local function lIlII1l11liIIiI1l1ill(Iil1iiliiIli1llil1I) local I1iII1illI1iIIl1iIi = { Iill1IIi1i11Ii11IIi(lIlilillilIliili1l11l, ilIilIiiliiil1IIlII, ilIilIiiliiil1IIlII + 3) } ilIilIiiliiil1IIlII = ilIilIiiliiil1IIlII + 4 local l1iiIiiIllii1li1ii1 = l1i1I1i11l1lIlIlI11(I1iII1illI1iIIl1iIi[1], iiilIIlII1lIIiIi1lI) local lIlli11I1I1iIIlIli1iI = l1i1I1i11l1lIlIlI11(I1iII1illI1iIIl1iIi[2], iiilIIlII1lIIiIi1lI) local lIl1I1l1II1Il11l1lIIi = l1i1I1i11l1lIlIlI11(I1iII1illI1iIIl1iIi[3], iiilIIlII1lIIiIi1lI) local I1IlIi1llI1Ii1II1ll = l1i1I1i11l1lIlIlI11(I1iII1illI1iIIl1iIi[4], iiilIIlII1lIIiIi1lI) iiilIIlII1lIIiIi1lI = (217 * iiilIIlII1lIIiIi1lI + Iil1iiliiIli1llil1I) % 256 return I1IlIi1llI1Ii1II1ll * 16777216 + lIl1I1l1II1Il11l1lIIi * 65536 + lIlli11I1I1iIIlIli1iI * 256 + l1iiIiiIllii1li1ii1 end local function lIliIil1Iil1iIil1iIi1(i1lIii11i1il1II1II1) local lI1IiiIliilIli1il1l = lIllIIIii1iIlll1iliii() local I1li1I1i1I1I11il1il = "" for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lI1IiiIliilIli1il1l do I1li1I1i1I1I11il1il = I1li1I1i1I1I11il1il .. IliillllIl1I11iiIlI(l1i1I1i11l1lIlIlI11(Iill1IIi1i11Ii11IIi(lIlilillilIliili1l11l, ilIilIiiliiil1IIlII + lliil1II11IliIi1I1I - 1), lIlliIi1lii1IIiII1I1I)) lIlliIi1lii1IIiII1I1I = (i1lIii11i1il1II1II1 * lIlliIi1lii1IIiII1I1I + 233) % 256 end ilIilIiiliiil1IIlII = ilIilIiiliiil1IIlII + lI1IiiIliilIli1il1l return I1li1I1i1I1I11il1il end lIlliIi1lii1IIiII1I1I = lIl1I1IliIli1ii11l1l1() iiilIIlII1lIIiIi1lI = lIl1I1IliIli1ii11l1l1() local IIIiillIIiIlIi1IiIl = {} for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIl1I1IliIli1ii11l1l1() do local lIl11lIi1iIiI1l1i1IIi = lIl1I1IliIli1ii11l1l1() local lIli11lii1lI1l1ilIi11 = (lliil1II11IliIi1I1I - 1) * 2 IIIiillIIiIlIi1IiIl[lIli11lii1lI1l1ilIi11] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, 1, 4) IIIiillIIiIlIi1IiIl[lIli11lii1lI1l1ilIi11 + 1] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, 5, 8) end local function lIliI11IllililIll1l1l() local III1ll1lilIlillilii = { {}, nil, nil, nil, {}, {}, {} } local lIllIiilll1il1111IiII = lIllIIIii1iIlll1iliii() - (#{ 1103, 6547, 69, 573, 4405, 3360, 1820, 757, 572, 5947, 5138, 6387, 2038, 2181, 4357, 3313, 5773, 2917, 603, 2937, 6537, 1775, 973, 1535 } + I1iii1lli1Ii1l1iI1l + 133653) local lIlIl11lli1iiiIlIiiIi = lIl1I1IliIli1ii11l1l1() for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIllIiilll1il1111IiII do local l1IllllI1il11IllII1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIl11lIi1iIiI1l1i1IIi = lIlII1l11liIIiI1l1ill(lIlIl11lli1iiiIlIiiIi) l1IllllI1il11IllII1[6] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, #{5791}, #{ 1483, 4100, 2676, 6805, 4163, 6721, 4542, 3139, 6436 }) l1IllllI1il11IllII1[7] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, #{4167}, #{ 1956, 3064, 825, 1087, 4023, 6733, 5100, 3300, 1032, 6031, 6608, 3780, 5718, 646, 1956, 6495, 787, 5164 }) l1IllllI1il11IllII1[4] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, #{ 3214, 6385, 4986, 1159, 3429, 4840, 1107, 3750, 1194, 2734, 5999, 6725, 1129, 1412, 2633, 168, 719, 5998, 241, 5051, 2728, 5260, 2983 } + I1iii1lli1Ii1l1iI1l + -57, #{ 2429, 1685, 6815, 1856, 2706, 923, 6313, 6452, 980, 5315, 3887, 965, 4447, 2434, 6259, 3433, 2644, 53, 6042, 1169, 477, 2700, 4814, 5661 } + I1iii1lli1Ii1l1iI1l + -53) l1IllllI1il11IllII1[10] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, #{ 5306, 889, 4281, 3317, 3381, 5905, 2478, 3862, 2947, 2919, 2811, 4507, 2610, 4067, 2503, 5862, 2999, 5131, 6585 }, #{ 3040, 6110, 1813, 6289, 2889, 6510, 6263, 1408, 2242, 764, 4158, 4070, 297, 6614, 4910, 3152, 2722, 6284, 1779, 4772, 820 } + I1iii1lli1Ii1l1iI1l + -56) l1IllllI1il11IllII1[2] = IilliiIlI1llI1li1lI(lIl11lIi1iIiI1l1i1IIi, #{ 1852, 3644, 3592, 599, 229, 3517, 2607, 2175, 2303, 3351 }, #{ 2393, 6292, 6904, 3538, 2232, 2784, 5432, 2001, 3905, 4455, 6605, 672, 6200, 4038, 4932, 4195, 894, 601 }) III1ll1lilIlillilii[7][lliil1II11IliIi1I1I] = l1IllllI1il11IllII1 end lIllIIIii1iIlll1iliii() lIllIIIii1iIlll1iliii() lIllIIIii1iIlll1iliii() III1ll1lilIlillilii[2] = lIl1I1IliIli1ii11l1l1() lIl1I1IliIli1ii11l1l1() local lIll1IiilIiiiIiilIi1I = lIllIIIii1iIlll1iliii() for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIll1IiilIiiiIiilIi1I do III1ll1lilIlillilii[1][lliil1II11IliIi1I1I - i1i1l1I1i11iii1i1Il] = lIliI11IllililIll1l1l() end local lIll1IiilIiiiIiilIi1I = lIllIIIii1iIlll1iliii() for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIll1IiilIiiiIiilIi1I do III1ll1lilIlillilii[5][lliil1II11IliIi1I1I] = lIllIIIii1iIlll1iliii() end local lIll1IiilIiiiIiilIi1I = lIllIIIii1iIlll1iliii() - (#{ 6794, 3204, 4636, 3851, 3276, 4277, 833, 6247, 847, 1863, 4836, 4081, 1499, 3302, 1836, 5730, 954, 1973, 4362, 4598, 3846, 4094, 6166, 6715 } + I1iii1lli1Ii1l1iI1l + 133683) local lIliilli1liI1liliIIl1 = lIl1I1IliIli1ii11l1l1() for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIll1IiilIiiiIiilIi1I do local I1IlIlIIliiIIillIiI local IiIIIIililll1IIIllI = lIl1I1IliIli1ii11l1l1() if IiIIIIililll1IIIllI == #{ 520, 3520, 6127, 1637, 1207, 3576, 930, 870, 2057, 666, 5394, 5169, 2544, 6847, 4940, 6315, 1380, 1889, 3153, 4084, 6159, 245 } + I1iii1lli1Ii1l1iI1l + 22 then I1IlIlIIliiIIillIiI = IiliI111Il11ii1il1I(lIliIil1Iil1iIil1iIi1(#{ 6685, 6121, 6914, 1668, 1934, 6438, 2286, 2662, 5098, 3292, 2607, 5967, 5056, 828, 874, 6668, 5790, 1771, 3386, 2658 } + I1iii1lli1Ii1l1iI1l + 39), #{ 6682, 4767, 784, 5789, 5914 }) end if IiIIIIililll1IIIllI == #{ 6886, 6639, 3883, 621, 3229, 4898, 2537, 6363, 5390, 1496, 4540, 3174, 1277, 3266, 5847, 5117, 2192, 2697, 3463, 1903, 4271, 2659, 439 } + I1iii1lli1Ii1l1iI1l + 127 then I1IlIlIIliiIIillIiI = #{ 4402, 4167, 3629, 3890, 4434, 812, 6182, 3164, 1839, 4973, 2852, 849, 4860, 3493, 3353, 845, 398, 535, 5357, 1832 } + I1iii1lli1Ii1l1iI1l + 99305 == #{ 4402, 4167, 3629, 3890, 4434, 812, 6182, 3164, 1839, 4973, 2852, 849, 4860, 3493, 3353, 845, 398, 535, 5357, 1832 } + I1iii1lli1Ii1l1iI1l + 99305 end if IiIIIIililll1IIIllI == #{ 371, 2259, 4005, 2266, 2428, 4074, 11, 1671, 5760, 5570, 1716, 6408, 1949, 2560, 737, 154, 2164, 2437, 2404, 2849 } + I1iii1lli1Ii1l1iI1l + 163 then I1IlIlIIliiIIillIiI = iIiiIi1li111I1l1lIi() end if IiIIIIililll1IIIllI == #{ 786, 5797, 4871, 574, 4099, 6597, 1662, 3679, 4186, 694, 5844, 3563, 5493, 4414, 5709, 234, 3848, 656, 2327, 4387, 5156, 1738, 500 } + I1iii1lli1Ii1l1iI1l + 39 then I1IlIlIIliiIIillIiI = lIl1I1IliIli1ii11l1l1() + lIllIIIii1iIlll1iliii() + iIiiIi1li111I1l1lIi() end if IiIIIIililll1IIIllI == #{ 4501, 4547, 791, 5154, 466, 2183, 667, 4945, 3234, 6450, 2036, 3567, 3615, 5426, 3715, 5809, 3373, 4783, 2517, 4487, 894, 4198, 2127, 3882 } + I1iii1lli1Ii1l1iI1l + -29 then I1IlIlIIliiIIillIiI = IiliI111Il11ii1il1I(lIliIil1Iil1iIil1iIi1(lIliilli1liI1liliIIl1), #{ 2883, 6403, 5593, 4769, 5905 }) end if IiIIIIililll1IIIllI == #{ 2291, 205, 5691, 1705, 5726, 1832, 5892, 4059, 1223, 4300, 3365, 1736, 5364, 1922, 2078, 727, 4288, 4991, 6823, 3034 } + I1iii1lli1Ii1l1iI1l + 106 then I1IlIlIIliiIIillIiI = #{ 5111, 6856, 3560, 185, 6630, 5854, 2926, 3353, 4774, 916, 3417, 3127, 1422, 3693, 2862, 3463, 4187, 6041, 3770, 241, 5562 } + I1iii1lli1Ii1l1iI1l + 88356 == #{ 4549, 2793, 1743, 5350, 1284, 4762, 5008, 6341, 4929, 2973, 6257, 6743, 50, 3033, 4124, 442, 4978, 4251, 6485, 3845, 233, 702 } + I1iii1lli1Ii1l1iI1l + 2482 end if IiIIIIililll1IIIllI == #{ 1285, 3640, 6644, 2154, 1871, 1989, 5170, 6768, 5995, 5010, 3968, 5721, 5838, 4546, 1409, 4982, 4801, 3174, 6839, 3422, 6567, 3875, 5401 } + I1iii1lli1Ii1l1iI1l + 3 then I1IlIlIIliiIIillIiI = lIllIIIii1iIlll1iliii() end if IiIIIIililll1IIIllI == #{ 5387, 5879, 5962, 6825, 136, 1502, 4213, 2615, 711, 6200, 3939, 1067, 5263, 4820, 6052, 1818, 3523, 5460, 4443, 441 } + I1iii1lli1Ii1l1iI1l + 118 then I1IlIlIIliiIIillIiI = iIiiIi1li111I1l1lIi() + iIiiIi1li111I1l1lIi() end if IiIIIIililll1IIIllI == #{ 42, 5590, 961, 5145, 1320, 2682, 1443, 1712, 5924, 4934, 6832, 1830, 4478, 4688, 1185, 5503, 2019, 4225, 5442, 155, 744, 6365, 2748, 4743 } + I1iii1lli1Ii1l1iI1l + -44 then I1IlIlIIliiIIillIiI = lIl1I1IliIli1ii11l1l1() end III1ll1lilIlillilii[6][lliil1II11IliIi1I1I - i1i1l1I1i11iii1i1Il] = I1IlIlIIliiIIillIiI end for lliil1II11IliIi1I1I = i1i1l1I1i11iii1i1Il, lIllIiilll1il1111IiII do local l1IllllI1il11IllII1 = III1ll1lilIlillilii[7][lliil1II11IliIi1I1I] local lIilI11II11111lIiII = IIIiillIIiIlIi1IiIl[l1IllllI1il11IllII1[4]] if lIilI11II11111lIiII == #{334, 1113} and l1IllllI1il11IllII1[2] > 255 then l1IllllI1il11IllII1[5] = true l1IllllI1il11IllII1[3] = III1ll1lilIlillilii[6][l1IllllI1il11IllII1[2] - 256] end if lIilI11II11111lIiII == #{ 2490, 1519, 6519 } then if l1IllllI1il11IllII1[6] > 255 then l1IllllI1il11IllII1[9] = true l1IllllI1il11IllII1[1] = III1ll1lilIlillilii[6][l1IllllI1il11IllII1[6] - 256] end if l1IllllI1il11IllII1[2] > 255 then l1IllllI1il11IllII1[5] = true l1IllllI1il11IllII1[3] = III1ll1lilIlillilii[6][l1IllllI1il11IllII1[2] - 256] end end if lIilI11II11111lIiII == #{ 2014, 4940, 3761, 3089 } then l1IllllI1il11IllII1[8] = III1ll1lilIlillilii[6][l1IllllI1il11IllII1[7]] end if lIilI11II11111lIiII == #{2184} and l1IllllI1il11IllII1[6] > 255 then l1IllllI1il11IllII1[9] = true l1IllllI1il11IllII1[1] = III1ll1lilIlillilii[6][l1IllllI1il11IllII1[6] - 256] end end III1ll1lilIlillilii[4] = lIl1I1IliIli1ii11l1l1() lIl1I1IliIli1ii11l1l1() lIllIIIii1iIlll1iliii() lIl1I1IliIli1ii11l1l1() lIl1I1IliIli1ii11l1l1() III1ll1lilIlillilii[3] = lIl1I1IliIli1ii11l1l1() return III1ll1lilIlillilii end local function IiliI1IIiIiIil11ill(III1ll1lilIlillilii, llllI1ll1liii1l1iiI, IlIIllI1I1Ii1IliiiI) local I1II1lI1IIiil11111i, iil1ii1iiiIII1l11ll = 5, 16 local iiIIilI1IIlIi1IliI1 = III1ll1lilIlillilii[7] local I11IIllI11lII1llll1 = 3 local lIl1IilIIllliIiIIIi1l = III1ll1lilIlillilii[1] local lIlIli1iIllli11lIlilI = III1ll1lilIlillilii[4] local iiiiiililIiI11iIlil = III1ll1lilIlillilii[2] local lIlll1iI1IilIllIliiii = 4 local I11Ii1IlIliiiiiIiIi = III1ll1lilIlillilii[5] local lIl1iIi1lI1lliI1iIili = 6 local function iIil1I111IiiiiIi1Il(...) local il1l1l1IIiIliiIlill = 0 local liIll11lIii1IiiIlIi = { iiIil1lliIIll1l1lI1({}, 1, iiiiiililIiI11iIlil) } local I1liiliIlIiIl11iliI = 1 local IIiliIiiIiiliilllii = {} local ii1il11i11iII11Ii11 = {} local llllI1ll1liii1l1iiI = lii11lllIlIi1i11i1I() local ii11iIlil11lIiiIil1 = { ... } local lIl1ilIiil1Illiiliili = #ii11iIlil11lIiiIil1 - 1 for lliil1II11IliIi1I1I = 0, lIl1ilIiil1Illiiliili do if lliil1II11IliIi1I1I < lIlIli1iIllli11lIlilI then liIll11lIii1IiiIlIi[lliil1II11IliIi1I1I] = ii11iIlil11lIiiIil1[lliil1II11IliIi1I1I + 1] end end local function liI11IlIIlilIii1il1(...) local lIl1I1l1II1Il11l1lIIi = lll11I1ilI1Ii1l1Iil("#", ...) local lIli1ilII11i1iiIliIii = { ... } return lIl1I1l1II1Il11l1lIIi, lIli1ilII11i1iiIliIii end local function iIililliiI1lii11ilI() while true do local lIlliIl1lIii1IlIii1II = iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] local lIllilill1ilIi1ilIiI1 = lIlliIl1lIii1IlIii1II[4] I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 if lIllilill1ilIi1ilIiI1 < 11 then if lIllilill1ilIi1ilIiI1 < 5 then if lIllilill1ilIi1ilIiI1 < 2 then if lIllilill1ilIi1ilIiI1 ~= 1 then liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = llllI1ll1liii1l1iiI[lIlliIl1lIii1IlIii1II[8]] else local ll1I1lliIlli1i1I1ll = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] for lliil1II11IliIi1I1I = lIlliIl1lIii1IlIii1II[6] + 1, lIlliIl1lIii1IlIii1II[2] do ll1I1lliIlli1i1I1ll = ll1I1lliIlli1i1I1ll .. liIll11lIii1IiiIlIi[lliil1II11IliIi1I1I] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = ll1I1lliIlli1i1I1ll end elseif lIllilill1ilIi1ilIiI1 >= 3 then if lIllilill1ilIi1ilIiI1 == 4 then llllI1ll1liii1l1iiI[lIlliIl1lIii1IlIii1II[8]] = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] else local lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[9] then lIlli11I1I1iIIlIli1iI = lIlliIl1lIii1IlIii1II[1] else lIlli11I1I1iIIlIli1iI = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] end if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lIlli11I1I1iIIlIli1iI - lIl1I1l1II1Il11l1lIIi end else local lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[9] then lIlli11I1I1iIIlIli1iI = lIlliIl1lIii1IlIii1II[1] else lIlli11I1I1iIIlIli1iI = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] end if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lIlli11I1I1iIIlIli1iI + lIl1I1l1II1Il11l1lIIi end elseif lIllilill1ilIi1ilIiI1 >= 8 then if lIllilill1ilIi1ilIiI1 >= 9 then if lIllilill1ilIi1ilIiI1 ~= 10 then if lIlliIl1lIii1IlIii1II[6] == 180 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 5, [10] = (lIlliIl1lIii1IlIii1II[10] - 74) % 256, [6] = (lIlliIl1lIii1IlIii1II[2] - 74) % 256 } elseif lIlliIl1lIii1IlIii1II[6] == 75 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 16, [10] = (lIlliIl1lIii1IlIii1II[10] - 36) % 256, [6] = (lIlliIl1lIii1IlIii1II[2] - 36) % 256 } else local lIl11iI1Ii1liIi1Ii11I = lIlliIl1lIii1IlIii1II[10] local lIli11lii1lI1l1ilIi11 = lIl11iI1Ii1liIi1Ii11I + 2 local ll1I1lliIlli1i1I1ll = { liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I](liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I + 1], liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I + 2]) } for lliil1II11IliIi1I1I = 1, lIlliIl1lIii1IlIii1II[2] do liIll11lIii1IiiIlIi[lIli11lii1lI1l1ilIi11 + lliil1II11IliIi1I1I] = ll1I1lliIlli1i1I1ll[lliil1II11IliIi1I1I] end if liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I + 3] ~= nil then liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I + 2] = liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I + 3] else I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end end elseif lIlliIl1lIii1IlIii1II[2] == 140 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 9, [10] = (lIlliIl1lIii1IlIii1II[10] - 214) % 256, [2] = (lIlliIl1lIii1IlIii1II[6] - 214) % 256 } else IIiliIiiIiiliilllii[liIll11lIii1IiiIlIi] = nil local lIl11iI1Ii1liIi1Ii11I = lIlliIl1lIii1IlIii1II[10] local lIlili11liliI1llIIlii = lIlliIl1lIii1IlIii1II[6] if lIlili11liliI1llIIlii == 1 then return true end local IlIIlIIlIliI1i11I1l = lIl11iI1Ii1liIi1Ii11I + lIlili11liliI1llIIlii - 2 if lIlili11liliI1llIIlii == 0 then IlIIlIIlIliI1i11I1l = il1l1l1IIiIliiIlill end return true, lIl11iI1Ii1liIi1Ii11I, IlIIlIIlIliI1i11I1l end else local lIl11iI1Ii1liIi1Ii11I = lIlliIl1lIii1IlIii1II[10] local ii11iIlil11lIiiIil1 = lIlliIl1lIii1IlIii1II[6] local Ii1I1iiilIl11lIIIIl = lIlliIl1lIii1IlIii1II[2] local l1IllI1l111ll1IlllI, IlIIlIIlIliI1i11I1l, iIililliiI1lii11ilI if ii11iIlil11lIiiIil1 ~= 1 then if ii11iIlil11lIiiIil1 ~= 0 then IlIIlIIlIliI1i11I1l = lIl11iI1Ii1liIi1Ii11I + ii11iIlil11lIiiIil1 - 1 else IlIIlIIlIliI1i11I1l = il1l1l1IIiIliiIlill end IlIIlIIlIliI1i11I1l, l1IllI1l111ll1IlllI = liI11IlIIlilIii1il1(liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I](iiIil1lliIIll1l1lI1(liIll11lIii1IiiIlIi, lIl11iI1Ii1liIi1Ii11I + 1, IlIIlIIlIliI1i11I1l))) else IlIIlIIlIliI1i11I1l, l1IllI1l111ll1IlllI = liI11IlIIlilIii1il1(liIll11lIii1IiiIlIi[lIl11iI1Ii1liIi1Ii11I]()) end if Ii1I1iiilIl11lIIIIl ~= 1 then if Ii1I1iiilIl11lIIIIl ~= 0 then IlIIlIIlIliI1i11I1l = lIl11iI1Ii1liIi1Ii11I + Ii1I1iiilIl11lIIIIl - 2 il1l1l1IIiIliiIlill = IlIIlIIlIliI1i11I1l + 1 else IlIIlIIlIliI1i11I1l = IlIIlIIlIliI1i11I1l + lIl11iI1Ii1liIi1Ii11I - 1 il1l1l1IIiIliiIlill = IlIIlIIlIliI1i11I1l end iIililliiI1lii11ilI = 0 for lliil1II11IliIi1I1I = lIl11iI1Ii1liIi1Ii11I, IlIIlIIlIliI1i11I1l do iIililliiI1lii11ilI = iIililliiI1lii11ilI + 1 liIll11lIii1IiiIlIi[lliil1II11IliIi1I1I] = l1IllI1l111ll1IlllI[iIililliiI1lii11ilI] end else il1l1l1IIiIliiIlill = lIl11iI1Ii1liIi1Ii11I - 1 end for lliil1II11IliIi1I1I = il1l1l1IIiIliiIlill + 1, iiiiiililIiI11iIlil do liIll11lIii1IiiIlIi[lliil1II11IliIi1I1I] = nil end end elseif lIllilill1ilIi1ilIiI1 < 6 then liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] elseif lIllilill1ilIi1ilIiI1 == 7 then if lIlliIl1lIii1IlIii1II[6] == 70 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 11, [10] = (lIlliIl1lIii1IlIii1II[10] - 180) % 256, [6] = (lIlliIl1lIii1IlIii1II[2] - 180) % 256 } elseif not not liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] == (lIlliIl1lIii1IlIii1II[2] == 0) then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end else liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lIlliIl1lIii1IlIii1II[8] end elseif lIllilill1ilIi1ilIiI1 < 17 then if lIllilill1ilIi1ilIiI1 >= 14 then if lIllilill1ilIi1ilIiI1 < 15 then local lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[9] then lIlli11I1I1iIIlIli1iI = lIlliIl1lIii1IlIii1II[1] else lIlli11I1I1iIIlIli1iI = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] end if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]][lIlli11I1I1iIIlIli1iI] = lIl1I1l1II1Il11l1lIIi elseif lIllilill1ilIi1ilIiI1 == 16 then liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = IlIIllI1I1Ii1IliiiI[lIlliIl1lIii1IlIii1II[6]] else liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = { iiIil1lliIIll1l1lI1(i11iiI1IlII11ll1iI1, 1, lIlliIl1lIii1IlIii1II[6] == 0 and 255 or lIlliIl1lIii1IlIii1II[6]) } end elseif lIllilill1ilIi1ilIiI1 >= 12 then if lIllilill1ilIi1ilIiI1 ~= 13 then local lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]][lIl1I1l1II1Il11l1lIIi] else local l1I1IIIillIiliI111I = lIl1IilIIllliIiIIIi1l[lIlliIl1lIii1IlIii1II[7]] local ii1I1Il1Ili11i1lI1i = {} if l1I1IIIillIiliI111I[I11IIllI11lII1llll1] > 0 then do local Il1ilII1l1ill11Illi = {} ii1I1Il1Ili11i1lI1i = I1i1iiiIlli1I1iIIil({}, { __index = function(lIli1ilII11i1iiIliIii, llI11i1lllI1lii1I1l) local lIlli1li1ll11III11II1 = Il1ilII1l1ill11Illi[llI11i1lllI1lii1I1l] return lIlli1li1ll11III11II1[1][lIlli1li1ll11III11II1[2]] end, __newindex = function(lIli1ilII11i1iiIliIii, llI11i1lllI1lii1I1l, IIillI1lIl111Illiii) local lIlli1li1ll11III11II1 = Il1ilII1l1ill11Illi[llI11i1lllI1lii1I1l] lIlli1li1ll11III11II1[1][lIlli1li1ll11III11II1[2]] = IIillI1lIl111Illiii end }) for lliil1II11IliIi1I1I = 1, l1I1IIIillIiliI111I[I11IIllI11lII1llll1] do local liI1lliii11iii1il1l = iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] if liI1lliii11iii1il1l[lIlll1iI1IilIllIliiii] == I1II1lI1IIiil11111i then Il1ilII1l1ill11Illi[lliil1II11IliIi1I1I - 1] = { liIll11lIii1IiiIlIi, liI1lliii11iii1il1l[lIl1iIi1lI1lliI1iIili] } elseif liI1lliii11iii1il1l[lIlll1iI1IilIllIliiii] == iil1ii1iiiIII1l11ll then Il1ilII1l1ill11Illi[lliil1II11IliIi1I1I - 1] = { IlIIllI1I1Ii1IliiiI, liI1lliii11iii1il1l[lIl1iIi1lI1lliI1iIili] } end I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end if not IIiliIiiIiiliilllii[liIll11lIii1IiiIlIi] then IIiliIiiIiiliilllii[liIll11lIii1IiiIlIi] = {Il1ilII1l1ill11Illi} else I11li111iil11liilll(IIiliIiiIiiliilllii[liIll11lIii1IiiIlIi], Il1ilII1l1ill11Illi) end end end local lli1I1Ii1I1l1i11ilI = IiliI1IIiIiIil11ill(l1I1IIIillIiliI111I, llllI1ll1liii1l1iiI, ii1I1Il1Ili11i1lI1i) liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lli1I1Ii1I1l1i11ilI end else IlIIllI1I1Ii1IliiiI[lIlliIl1lIii1IlIii1II[6]] = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] end elseif lIllilill1ilIi1ilIiI1 < 20 then if lIllilill1ilIi1ilIiI1 < 18 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + (lIlliIl1lIii1IlIii1II[7] - IiIIlil1i111II1illI) elseif lIllilill1ilIi1ilIiI1 == 19 then local lilIlII1llllil1iIli = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] local lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10] + 1] = lilIlII1llllil1iIli liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lilIlII1llllil1iIli[lIl1I1l1II1Il11l1lIIi] else local lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[9] then lIlli11I1I1iIIlIli1iI = lIlliIl1lIii1IlIii1II[1] else lIlli11I1I1iIIlIli1iI = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] end if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end if lIlli11I1I1iIIlIli1iI == lIl1I1l1II1Il11l1lIIi ~= (lIlliIl1lIii1IlIii1II[10] ~= 0) then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end end elseif lIllilill1ilIi1ilIiI1 < 21 then if lIlliIl1lIii1IlIii1II[2] == 121 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 7, [10] = (lIlliIl1lIii1IlIii1II[10] - 93) % 256, [2] = (lIlliIl1lIii1IlIii1II[6] - 93) % 256 } elseif lIlliIl1lIii1IlIii1II[2] == 66 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI - 1 iiIIilI1IIlIi1IliI1[I1liiliIlIiIl11iliI] = { [4] = 10, [10] = (lIlliIl1lIii1IlIii1II[10] - 244) % 256, [6] = (lIlliIl1lIii1IlIii1II[6] - 244) % 256 } else for lliil1II11IliIi1I1I = lIlliIl1lIii1IlIii1II[10], lIlliIl1lIii1IlIii1II[6] do liIll11lIii1IiiIlIi[lliil1II11IliIi1I1I] = nil end end elseif lIllilill1ilIi1ilIiI1 ~= 22 then local lIlli11I1I1iIIlIli1iI, lIl1I1l1II1Il11l1lIIi if lIlliIl1lIii1IlIii1II[9] then lIlli11I1I1iIIlIli1iI = lIlliIl1lIii1IlIii1II[1] else lIlli11I1I1iIIlIli1iI = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[6]] end if lIlliIl1lIii1IlIii1II[5] then lIl1I1l1II1Il11l1lIIi = lIlliIl1lIii1IlIii1II[3] else lIl1I1l1II1Il11l1lIIi = liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[2]] end if lIlli11I1I1iIIlIli1iI < lIl1I1l1II1Il11l1lIIi ~= (lIlliIl1lIii1IlIii1II[10] ~= 0) then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end else liIll11lIii1IiiIlIi[lIlliIl1lIii1IlIii1II[10]] = lIlliIl1lIii1IlIii1II[6] ~= 0 if lIlliIl1lIii1IlIii1II[2] ~= 0 then I1liiliIlIiIl11iliI = I1liiliIlIiIl11iliI + 1 end end end end local il1I1ll1ll1lIllii11, I1li1I1i1I1I11il1il, IiI11l1Ii1I1iil1ll1, I1I1IllillIii1I11iI = lIll11lii1IiiliiiIlii(iIililliiI1lii11ilI) if il1I1ll1ll1lIllii11 then if IiI11l1Ii1I1iil1ll1 then return iiIil1lliIIll1l1lI1(liIll11lIii1IiiIlIi, IiI11l1Ii1I1iil1ll1, I1I1IllillIii1I11iI) end else l11il1l1III11l1IIil("Luraph Script:" .. (I11Ii1IlIliiiiiIiIi[I1liiliIlIiIl11iliI - 1] or "") .. ": " .. ill1ilIIIiI1illiilI(I1li1I1i1I1I11il1il), 0) end end liil111ilIIiliilIlI(iIil1I111IiiiiIi1Il, llllI1ll1liii1l1iiI) return iIil1I111IiiiiIi1Il end local IIIiIIlIIl111II1l11 = lIliI11IllililIll1l1l() return IiliI1IIiIiIil11ill(IIIiIIlIIl111II1l11, llllI1ll1liii1l1iiI)() end lIllilIi1ii1IlIlii1II("LPH!", lii11lllIlIi1i11i1I()) 
